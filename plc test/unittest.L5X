<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="20.01" TargetName="unitttest" TargetType="Controller" ContainsContext="false" Owner="admin" ExportDate="Thu Feb 04 04:29:42 2021" ExportOptions="DecoratedData ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Target" Name="unitttest" ProcessorType="Emulator" MajorRev="20" MinorRev="11" TimeSlice="20" ShareUnusedTimeSlice="1" ProjectCreationDate="Thu Feb 04 03:54:15 2021" LastModifiedDate="Thu Feb 04 04:19:05 2021" SFCExecutionControl="CurrentActive" SFCRestartPosition="MostRecent"
 SFCLastScan="DontScan" ProjectSN="16#0000_0000" MatchProjectToController="false" CanUseRPIFromProducer="false" InhibitAutomaticFirmwareUpdate="0">
<RedundancyInfo Enabled="false" KeepTestEditsOnSwitchOver="false" IOMemoryPadPercentage="90" DataTablePadPercentage="50"/>
<Security Code="0" ChangesToDetect="16#ffff_ffff_ffff_ffff"/>
<SafetyInfo/>
<DataTypes>
<DataType Name="major_fault_record" Family="NoFamily" Class="User">
<Description>
<![CDATA[Structured data type for the MajorFaultRecord attribute of the PROGRAM GSV/SSV object.]]>
</Description>
<Members>
<Member Name="TimeLow" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="TimeHight" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="Type" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="Code" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="Info" DataType="DINT" Dimension="8" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
</DataTypes>
<Modules>
<Module Name="Local" CatalogNumber="Emulator" Vendor="1" ProductType="14" ProductCode="53" Major="20" Minor="11" ParentModule="Local" ParentModPortId="1" Inhibited="false" MajorFault="true"
>
<EKey State="ExactMatch"/>
<Ports>
<Port Id="1" Address="2" Type="ICP" Upstream="false">
<Bus Size="10"/>
</Port>
</Ports>
</Module>
</Modules>
<AddOnInstructionDefinitions>
<AddOnInstructionDefinition Name="event_queue_overflow_fault" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-24T09:53:12.390Z" CreatedBy="G5Y9GH2\jvalenzuela" EditedDate="2021-09-24T14:16:33.239Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="done" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if the expected major fault occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="fault_record" DataType="major_fault_record" ExternalAccess="None">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="major_fault_record">
<DataValueMember Name="TimeLow" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="TimeHight" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Type" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Code" DataType="INT" Radix="Decimal" Value="0"/>
<ArrayMember Name="Info" DataType="DINT" Dimensions="8" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
<Element Index="[3]" Value="0"/>
<Element Index="[4]" Value="0"/>
<Element Index="[5]" Value="0"/>
<Element Index="[6]" Value="0"/>
<Element Index="[7]" Value="0"/>
</ArrayMember>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="FAULT_TYPE" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData>00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="FAULT_CODE" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData>00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// This instruction evaluates a major processor fault to determine if it]]>
</Line>
<Line Number="1">
<![CDATA[// was generated by an event queue overflow. This instruction should only]]>
</Line>
<Line Number="2">
<![CDATA[// be used in a program's fault routine.]]>
</Line>
<Line Number="3">
<![CDATA[ ]]>
</Line>
<Line Number="4">
<![CDATA[// Retrieve the current major fault information.]]>
</Line>
<Line Number="5">
<![CDATA[GSV(Program, THIS, MajorFaultRecord, fault_record.timeLow);]]>
</Line>
<Line Number="6">
<![CDATA[ ]]>
</Line>
<Line Number="7">
<![CDATA[// See if the current major fault matches the type generated by an event]]>
</Line>
<Line Number="8">
<![CDATA[// queue overflow.]]>
</Line>
<Line Number="9">
<![CDATA[if (fault_record.code = FAULT_CODE) AND (fault_record.type = FAULT_TYPE) THEN]]>
</Line>
<Line Number="10">
<![CDATA[	done [:=] 1;]]>
</Line>
<Line Number="11">
<![CDATA[ ]]>
</Line>
<Line Number="12">
<![CDATA[	// Clear the fault.]]>
</Line>
<Line Number="13">
<![CDATA[	fault_record.code := 0;]]>
</Line>
<Line Number="14">
<![CDATA[	fault_record.type := 0;]]>
</Line>
<Line Number="15">
<![CDATA[	SSV(Program, THIS, MajorFaultRecord, fault_record.timeLow);]]>
</Line>
<Line Number="16">
<![CDATA[ ]]>
</Line>
<Line Number="17">
<![CDATA[END_IF;]]>
</Line>
<Line Number="18">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// Major fault codes identifying the major fault generated by the state]]>
</Line>
<Line Number="1">
<![CDATA[// machine AOI upon an event queue overflow: invalid array subscript.]]>
</Line>
<Line Number="2">
<![CDATA[FAULT_CODE := 20;]]>
</Line>
<Line Number="3">
<![CDATA[FAULT_TYPE := 4;]]>
</Line>
<Line Number="4">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="prescan_request" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-16T08:57:39.733Z" CreatedBy="G5Y9GH2\jvalenzuela" EditedDate="2021-09-26T15:37:47.168Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Switch to Prescan.]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="lock" TagType="Base" DataType="BOOL" Usage="InOut" Radix="Decimal" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Global access permissive. True when a request has initiated a switch to Prescan.]]>
</Description>
</Parameter>
<Parameter Name="done" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True after the processor has entered Prescan mode as a result of this request.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="pending" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[True if this AOI instance has triggered the switch to Prescan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// This instruction implements a method to programatically switch the processor]]>
</Line>
<Line Number="1">
<![CDATA[// into Prescan mode, which is achieved by calling a fault routine since the PLC]]>
</Line>
<Line Number="2">
<![CDATA[// program can not otherwise explicitly switch to program mode. The JSR to the]]>
</Line>
<Line Number="3">
<![CDATA[// fault routine must be enabled by the rung output of this AOI.]]>
</Line>
<Line Number="4">
<![CDATA[ ]]>
</Line>
<Line Number="5">
<![CDATA[ ]]>
</Line>
<Line Number="6">
<![CDATA[IF NOT done THEN]]>
</Line>
<Line Number="7">
<![CDATA[	lock := 1;]]>
</Line>
<Line Number="8">
<![CDATA[	pending := 1;]]>
</Line>
<Line Number="9">
<![CDATA[END_IF;]]>
</Line>
<Line Number="10">
<![CDATA[ ]]>
</Line>
<Line Number="11">
<![CDATA[ ]]>
</Line>
<Line Number="12">
<![CDATA[// Enable the test logic JSR if this instance has not yet triggered.]]>
</Line>
<Line Number="13">
<![CDATA[EnableOut [:=] NOT done;]]>
</Line>
<Line Number="14">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<Description>
<![CDATA[Prescan]]>
</Description>
<STContent>
<Line Number="0">
<![CDATA[// This request is complete once Prescan is reached from this instance.]]>
</Line>
<Line Number="1">
<![CDATA[IF pending THEN]]>
</Line>
<Line Number="2">
<![CDATA[	done := 1;]]>
</Line>
<Line Number="3">
<![CDATA[	pending := 0;]]>
</Line>
<Line Number="4">
<![CDATA[END_IF;]]>
</Line>
<Line Number="5">
<![CDATA[ ]]>
</Line>
<Line Number="6">
<![CDATA[ ]]>
</Line>
<Line Number="7">
<![CDATA[// Clear the global lock after Prescan was reached.]]>
</Line>
<Line Number="8">
<![CDATA[lock := 0;]]>
</Line>
<Line Number="9">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_activeOutput" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-16T13:41:04.724Z" CreatedBy="Not Available" EditedDate="2021-09-16T14:16:42.635Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_eventQueue_dequeue" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-28T09:00:55.657Z" CreatedBy="Not Available" EditedDate="2021-09-28T09:12:15.905Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="3" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="3" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_eventQueue_empty" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-24T03:34:00.837Z" CreatedBy="Not Available" EditedDate="2021-09-24T03:51:33.703Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="3" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="3" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_eventQueue_fifoOrder_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-23T08:20:22.711Z" CreatedBy="Not Available" EditedDate="2021-09-23T08:40:57.385Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super3" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super3 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State0 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State0 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State0 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State0" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State0 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="3" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="3" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_eventQueue_maxCapacity" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-18T06:43:24.420Z" CreatedBy="Not Available" EditedDate="2021-09-18T06:50:20.746Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_state1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the state1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_state1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the state1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_state1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the state1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_state1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the state1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_state2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the state2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_state2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the state2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_state2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the state2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_state2" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the state2 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="3" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="3" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_eventQueue_overflow" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-24T09:15:57.178Z" CreatedBy="Not Available" EditedDate="2021-09-24T14:20:51.997Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="active" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when this state machine is enabled and responding to events.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e1" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e2" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e3" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e4" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_State1" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the State1 state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_start" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the start state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="3" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="3" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
<Element Index="[2]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e1" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e2" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e3" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e4" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitialNested_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-30T02:32:07.625Z" CreatedBy="Not Available" EditedDate="2021-08-30T03:02:43.197Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitialNested_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-30T03:06:44.753Z" CreatedBy="Not Available" EditedDate="2021-08-30T03:10:25.564Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitialNested_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-30T05:06:54.691Z" CreatedBy="Not Available" EditedDate="2021-08-30T08:03:06.600Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-28T01:54:07.039Z" CreatedBy="Not Available" EditedDate="2021-08-28T02:24:08.750Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-28T05:57:39.110Z" CreatedBy="Not Available" EditedDate="2021-08-28T06:02:04.502Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_fromSubstateInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-28T06:03:21.128Z" CreatedBy="Not Available" EditedDate="2021-08-28T06:16:22.493Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_substate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the substate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternalNested_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T01:38:40.808Z" CreatedBy="Not Available" EditedDate="2021-09-07T01:52:09.994Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternalNested_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T01:54:03.456Z" CreatedBy="Not Available" EditedDate="2021-09-07T02:54:06.561Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternalNested_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T06:28:18.606Z" CreatedBy="Not Available" EditedDate="2021-09-07T06:52:32.236Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternal_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-31T03:22:18.694Z" CreatedBy="Not Available" EditedDate="2021-08-31T05:41:30.523Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternal_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-31T05:42:39.711Z" CreatedBy="Not Available" EditedDate="2021-08-31T05:57:12.249Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranExternal_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-31T05:59:26.281Z" CreatedBy="Not Available" EditedDate="2021-08-31T06:18:28.849Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_super" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the super state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocalNested_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-08T09:29:07.591Z" CreatedBy="Not Available" EditedDate="2021-09-09T00:57:56.303Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocalNested_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T01:00:25.853Z" CreatedBy="Not Available" EditedDate="2021-09-09T01:08:09.476Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocalNested_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T01:10:28.378Z" CreatedBy="Not Available" EditedDate="2021-09-09T01:59:14.507Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocal_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T09:24:57.381Z" CreatedBy="Not Available" EditedDate="2021-09-07T09:45:17.450Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocal_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T09:52:17.731Z" CreatedBy="Not Available" EditedDate="2021-09-07T11:00:31.015Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranLocal_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-07T11:07:49.757Z" CreatedBy="Not Available" EditedDate="2021-09-08T09:06:09.238Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelfInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-14T10:10:03.047Z" CreatedBy="Not Available" EditedDate="2021-09-14T10:24:03.001Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_setup" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_setup" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelfInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-14T10:28:40.382Z" CreatedBy="Not Available" EditedDate="2021-09-14T10:33:57.368Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_setup" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_setup" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelfInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-15T03:31:36.150Z" CreatedBy="Not Available" EditedDate="2021-09-15T03:45:30.787Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_setup" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_setup" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelf_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T02:53:07.320Z" CreatedBy="Not Available" EditedDate="2021-09-09T02:59:16.792Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelf_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T03:01:56.184Z" CreatedBy="Not Available" EditedDate="2021-09-09T03:04:05.857Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSelf_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T03:06:33.753Z" CreatedBy="Not Available" EditedDate="2021-09-09T03:09:31.857Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSubInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T09:02:42.467Z" CreatedBy="Not Available" EditedDate="2021-09-09T09:18:17.622Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSubInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T09:21:06.058Z" CreatedBy="Not Available" EditedDate="2021-09-09T09:22:33.937Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSubInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T09:23:48.169Z" CreatedBy="Not Available" EditedDate="2021-09-09T09:31:22.151Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSub_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T07:24:52.843Z" CreatedBy="Not Available" EditedDate="2021-09-09T07:32:08.475Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSub_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T08:01:58.490Z" CreatedBy="Not Available" EditedDate="2021-09-09T08:06:53.355Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSub_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-09T08:08:34.734Z" CreatedBy="Not Available" EditedDate="2021-09-09T08:11:27.999Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuperInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-12T03:35:10.355Z" CreatedBy="Not Available" EditedDate="2021-09-12T03:43:36.421Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuperInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-13T03:44:38.622Z" CreatedBy="Not Available" EditedDate="2021-09-13T03:46:36.048Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuperInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-13T03:48:06.850Z" CreatedBy="Not Available" EditedDate="2021-09-13T06:07:36.237Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_sub" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the sub state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuper_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-10T08:30:15.719Z" CreatedBy="Not Available" EditedDate="2021-09-10T09:29:36.475Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuper_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-10T09:36:33.896Z" CreatedBy="Not Available" EditedDate="2021-09-10T09:38:02.895Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_grpTranToSuper_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-10T10:41:05.482Z" CreatedBy="Not Available" EditedDate="2021-09-10T10:58:44.467Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.050Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:24.509Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.178Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:34.702Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.306Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:56.947Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.438Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:10.540Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.540Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:31.651Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.646Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:40.266Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.745Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:30.322Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.908Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:37.736Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.071Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:47.830Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.242Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:58.121Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.406Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:07.759Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.567Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:21.351Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.740Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:33.454Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.871Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:45.496Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:51.003Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:54.997Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T13:02:48.710Z" CreatedBy="Not Available" EditedDate="2021-08-12T13:21:24.272Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T02:22:55.595Z" CreatedBy="Not Available" EditedDate="2021-08-13T05:49:19.072Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T05:30:37.516Z" CreatedBy="Not Available" EditedDate="2021-08-13T05:49:29.706Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-21T01:53:28.215Z" CreatedBy="Not Available" EditedDate="2021-08-21T02:10:10.190Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-21T05:43:30.778Z" CreatedBy="Not Available" EditedDate="2021-08-21T07:01:43.364Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-24T02:29:40.747Z" CreatedBy="Not Available" EditedDate="2021-08-24T03:19:56.106Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T05:05:43.731Z" CreatedBy="Not Available" EditedDate="2021-08-19T05:54:04.992Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T06:51:49.684Z" CreatedBy="Not Available" EditedDate="2021-08-19T07:15:47.033Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T07:54:20.841Z" CreatedBy="Not Available" EditedDate="2021-08-19T08:48:22.122Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-25T06:00:55.923Z" CreatedBy="Not Available" EditedDate="2021-08-25T06:13:18.384Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-25T08:48:06.005Z" CreatedBy="Not Available" EditedDate="2021-08-25T09:05:29.793Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T03:10:29.791Z" CreatedBy="Not Available" EditedDate="2021-08-26T03:39:35.721Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T08:24:57.805Z" CreatedBy="Not Available" EditedDate="2021-08-26T09:16:32.215Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T09:24:19.050Z" CreatedBy="Not Available" EditedDate="2021-08-27T02:36:59.923Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-27T02:41:03.908Z" CreatedBy="Not Available" EditedDate="2021-08-27T07:46:35.975Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T02:19:23.904Z" CreatedBy="Not Available" EditedDate="2021-08-20T02:31:33.674Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T04:37:36.239Z" CreatedBy="Not Available" EditedDate="2021-08-20T04:48:45.920Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T06:34:08.318Z" CreatedBy="Not Available" EditedDate="2021-08-20T06:53:46.803Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T06:00:22.181Z" CreatedBy="Not Available" EditedDate="2021-08-18T06:16:52.939Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T06:29:28.124Z" CreatedBy="Not Available" EditedDate="2021-08-18T07:15:41.804Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T07:50:04.801Z" CreatedBy="Not Available" EditedDate="2021-08-18T08:25:18.435Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T05:34:52.436Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:19:20.836Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T05:46:47.652Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:20:58.111Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T06:14:20.948Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:21:08.112Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T06:55:53.323Z" CreatedBy="Not Available" EditedDate="2021-08-17T07:15:14.742Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T08:39:47.444Z" CreatedBy="Not Available" EditedDate="2021-08-17T08:45:30.610Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T12:32:48.397Z" CreatedBy="Not Available" EditedDate="2021-08-17T12:54:59.950Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T01:56:11.528Z" CreatedBy="Not Available" EditedDate="2021-08-17T02:06:37.011Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T03:08:51.882Z" CreatedBy="Not Available" EditedDate="2021-08-17T03:12:47.943Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T05:17:48.841Z" CreatedBy="Not Available" EditedDate="2021-08-17T05:21:49.176Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T05:48:08.453Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:05:03.193Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-16T06:06:10.456Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:15:50.737Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-16T06:19:31.100Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:33:28.736Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T07:22:55.925Z" CreatedBy="Not Available" EditedDate="2021-08-13T07:52:07.116Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T01:26:01.103Z" CreatedBy="Not Available" EditedDate="2021-08-14T01:34:59.143Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T03:08:38.549Z" CreatedBy="Not Available" EditedDate="2021-08-14T03:18:42.408Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_master" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-09-26T08:11:56.274Z" CreatedBy="G5Y9GH2\jvalenzuela" EditedDate="2021-09-28T03:48:54.526Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Global unit test controller.]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="test_done" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[True when the current test case has completed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="test_select" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[ID of the test case currently being executed.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="done" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True when all test cases have executed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="init_done" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[True after the first Prescan and first normal logic scan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="last_test" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Identifier of the last test case.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// This instruction coordinates execution of individual test cases by ensuring]]>
</Line>
<Line Number="1">
<![CDATA[// only one test is executed at a time. Operation is divided into two phases:]]>
</Line>
<Line Number="2">
<![CDATA[//]]>
</Line>
<Line Number="3">
<![CDATA[// 1. Initialization. This assigns a unique ID(test_select) to each test case]]>
</Line>
<Line Number="4">
<![CDATA[//    during the very first Prescan.]]>
</Line>
<Line Number="5">
<![CDATA[// 2. Execution. All normal scans and Prescans after Initialization are where]]>
</Line>
<Line Number="6">
<![CDATA[//    test cases are executed one at a time. ]]>
</Line>
<Line Number="7">
<![CDATA[ ]]>
</Line>
<Line Number="8">
<![CDATA[ ]]>
</Line>
<Line Number="9">
<![CDATA[// Complete initalization on the first scan following the first Prescan.]]>
</Line>
<Line Number="10">
<![CDATA[// Initialization is inhibited for any additional Prescans as they will]]>
</Line>
<Line Number="11">
<![CDATA[// be part of an actual unit test case.]]>
</Line>
<Line Number="12">
<![CDATA[IF NOT init_done THEN]]>
</Line>
<Line Number="13">
<![CDATA[	init_done := 1; // Latch the initialization complete state.]]>
</Line>
<Line Number="14">
<![CDATA[	last_test := test_select; // Capture ID of the last test case.]]>
</Line>
<Line Number="15">
<![CDATA[	test_select := 0; // Inhibit all tests on this first scan.]]>
</Line>
<Line Number="16">
<![CDATA[ ]]>
</Line>
<Line Number="17">
<![CDATA[// Initialization is complete after the first Prescan and normal logic scan;]]>
</Line>
<Line Number="18">
<![CDATA[// the first test can begin on the second normal logic scan. This allows the]]>
</Line>
<Line Number="19">
<![CDATA[// unitTest_case AOIs to complete their first initialization logic scan]]>
</Line>
<Line Number="20">
<![CDATA[// before additional Prescans initiated by test cases.]]>
</Line>
<Line Number="21">
<![CDATA[ELSIF test_select = 0 THEN]]>
</Line>
<Line Number="22">
<![CDATA[	test_select := 1;]]>
</Line>
<Line Number="23">
<![CDATA[ ]]>
</Line>
<Line Number="24">
<![CDATA[END_IF;]]>
</Line>
<Line Number="25">
<![CDATA[ ]]>
</Line>
<Line Number="26">
<![CDATA[ ]]>
</Line>
<Line Number="27">
<![CDATA[// Handle completion of the current test.]]>
</Line>
<Line Number="28">
<![CDATA[IF test_done THEN]]>
</Line>
<Line Number="29">
<![CDATA[	test_select := test_select + 1; // Advance to the next test.]]>
</Line>
<Line Number="30">
<![CDATA[ ]]>
</Line>
<Line Number="31">
<![CDATA[	// The test_done bit is set by the test case AOIs; it only needs to be reset]]>
</Line>
<Line Number="32">
<![CDATA[	// here in preparation for the next test.]]>
</Line>
<Line Number="33">
<![CDATA[	test_done := 0;]]>
</Line>
<Line Number="34">
<![CDATA[ ]]>
</Line>
<Line Number="35">
<![CDATA[	done := test_select > last_test; // Done when the last test finishes.]]>
</Line>
<Line Number="36">
<![CDATA[END_IF;]]>
</Line>
<Line Number="37">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_case" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-02T13:30:44.005Z" CreatedBy="VM\Admin" EditedDate="2021-09-28T03:08:28.428Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Single unit test control.]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="setup_done" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True when all preliminary logic scans are complete before enforcing assertions.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if one or more assertions failed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="pass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True when all configured scans have been executed with no assertion failures.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[Current scan being executed, zero-based.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="master" TagType="Base" DataType="unitTest_master" Usage="InOut" Required="true" Visible="true" Constant="false"/>
</Parameters>
<LocalTags>
<LocalTag Name="id" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Globally-unique identifier assigned to this test case.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="last_scan" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Total number of normal logic scans required to complete this test.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="enabled" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[True when the global unit test controller has enabled this test to run.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="init_done" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[True after the first Prescan and normal logic scans have completed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// This instruction controls execution of a single unit test as enabled]]>
</Line>
<Line Number="1">
<![CDATA[// by the master AOI. The actual test logic should be in a dedicated routine]]>
</Line>
<Line Number="2">
<![CDATA[// enabled by a JSR tied to the rung output of this AOI.]]>
</Line>
<Line Number="3">
<![CDATA[ ]]>
</Line>
<Line Number="4">
<![CDATA[ ]]>
</Line>
<Line Number="5">
<![CDATA[// Initialize the scan counters on first scan after the first Prescan.]]>
</Line>
<Line Number="6">
<![CDATA[IF NOT init_done THEN]]>
</Line>
<Line Number="7">
<![CDATA[	init_done := 1; // Disable initialization.]]>
</Line>
<Line Number="8">
<![CDATA[	last_scan := scan; // Capture final scan from assertion AOIs.]]>
</Line>
<Line Number="9">
<![CDATA[	scan := -1; // Reset so the first scan after setup will be 0.]]>
</Line>
<Line Number="10">
<![CDATA[END_IF;]]>
</Line>
<Line Number="11">
<![CDATA[ ]]>
</Line>
<Line Number="12">
<![CDATA[ ]]>
</Line>
<Line Number="13">
<![CDATA[// This test is enabled for execution when the master AOI selects this]]>
</Line>
<Line Number="14">
<![CDATA[// test's ID.]]>
</Line>
<Line Number="15">
<![CDATA[enabled [:=] master.test_select = id;]]>
</Line>
<Line Number="16">
<![CDATA[ ]]>
</Line>
<Line Number="17">
<![CDATA[ ]]>
</Line>
<Line Number="18">
<![CDATA[// Handle test execution when enabled.]]>
</Line>
<Line Number="19">
<![CDATA[IF enabled THEN]]>
</Line>
<Line Number="20">
<![CDATA[	// Test is successful if all scans complete with no assertion failures.]]>
</Line>
<Line Number="21">
<![CDATA[	pass := (scan = last_scan) AND NOT fail;]]>
</Line>
<Line Number="22">
<![CDATA[ ]]>
</Line>
<Line Number="23">
<![CDATA[	// Increment logic scan numbers after any setup scans.]]>
</Line>
<Line Number="24">
<![CDATA[	IF setup_done THEN]]>
</Line>
<Line Number="25">
<![CDATA[		scan := scan + 1;]]>
</Line>
<Line Number="26">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="27">
<![CDATA[ ]]>
</Line>
<Line Number="28">
<![CDATA[	// Signal the master when this test is complete.]]>
</Line>
<Line Number="29">
<![CDATA[	IF pass OR fail THEN]]>
</Line>
<Line Number="30">
<![CDATA[		master.test_done := 1;]]>
</Line>
<Line Number="31">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="32">
<![CDATA[END_IF;]]>
</Line>
<Line Number="33">
<![CDATA[ ]]>
</Line>
<Line Number="34">
<![CDATA[ ]]>
</Line>
<Line Number="35">
<![CDATA[// Enable the test logic JSR while this test is enabled but not yet complete.]]>
</Line>
<Line Number="36">
<![CDATA[EnableOut [:=] enabled AND NOT pass AND NOT fail;]]>
</Line>
<Line Number="37">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// Assign a unique test ID from the master only on the very first Prescan.]]>
</Line>
<Line Number="1">
<![CDATA[IF NOT init_done THEN]]>
</Line>
<Line Number="2">
<![CDATA[	master.test_select := master.test_select + 1;]]>
</Line>
<Line Number="3">
<![CDATA[	id := master.test_select;]]>
</Line>
<Line Number="4">
<![CDATA[END_IF;]]>
</Line>
<Line Number="5">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_assertTrue" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2021-08-02T13:33:20.895Z" CreatedBy="VM\Admin" EditedDate="2021-09-28T03:12:31.236Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Unit test result assertion.]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[Scan number where this condition must be true.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="unit_test_case" TagType="Base" DataType="unitTest_case" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Parent test case.]]>
</Description>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if this assertion was not true on the target scan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="init_done" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[True after the first Prescan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="EnableInFalse" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// Signal an assertion failure if this AOI was scanned false on the]]>
</Line>
<Line Number="1">
<![CDATA[// target scan.]]>
</Line>
<Line Number="2">
<![CDATA[IF unit_test_case.scan = scan THEN]]>
</Line>
<Line Number="3">
<![CDATA[	fail := 1;]]>
</Line>
<Line Number="4">
<![CDATA[	unit_test_case.fail := 1;]]>
</Line>
<Line Number="5">
<![CDATA[END_IF;]]>
</Line>
<Line Number="6">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This instruction confirms a boolean condition is true at a single scan during a unit test case. No logic exists in this routine since EnableIn true requires no action; see the EnableInFalse routine for failure semantics.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[// Handle initialization tasks on the first Prescan only.]]>
</Line>
<Line Number="1">
<![CDATA[IF NOT init_done THEN]]>
</Line>
<Line Number="2">
<![CDATA[	init_done := 1; // Disable initialization for further Prescans.]]>
</Line>
<Line Number="3">
<![CDATA[ ]]>
</Line>
<Line Number="4">
<![CDATA[	// Register the final scan number with the test case.]]>
</Line>
<Line Number="5">
<![CDATA[	if scan > unit_test_case.scan THEN]]>
</Line>
<Line Number="6">
<![CDATA[		unit_test_case.scan := scan;]]>
</Line>
<Line Number="7">
<![CDATA[	END_IF;]]>
</Line>
<Line Number="8">
<![CDATA[END_IF;]]>
</Line>
<Line Number="9">
<![CDATA[ ]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
<Tags>
<Tag Name="master" TagType="Base" DataType="unitTest_master" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_master">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="test_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="test_select" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="pass_activeOutputPrescan" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_activeOutputScanFalse" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_activeOutputScanTrue" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueDequeue" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueEmptyPrescan" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueEmptyScanFalse" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueFifoOrder" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueMaxCapacity" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueOverflowFault" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueOverflowOutputReset" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueueOverflowOutputSet" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternalNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternalNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternalNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternal_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternal_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranExternal_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocalNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocalNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocalNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocal_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocal_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranLocal_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelfInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelfInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelfInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelf_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelf_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSelf_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSubInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSubInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSubInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSub_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSub_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSub_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuperInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuperInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuperInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuper_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuper_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_grpTranToSuper_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionFromSubstateInitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="PRESCAN_FAULT_CODE" TagType="Base" DataType="DINT" Radix="Decimal" Constant="true" ExternalAccess="None">
<Description>
<![CDATA[User-defined major fault code for entering Prescan; for use as the input pararameter for fault routine JSR instructions. Ref 1756-PM014-EN-P, page 24.]]>
</Description>
<Data>E7 03 00 00</Data>
<Data Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="999"/>
</Data>
</Tag>
<Tag Name="prescan_pending" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when a unit test has requested a switch to Prescan mode.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Programs>
<Program Name="activeOutput_prescan" TestEdits="false" MainRoutineName="main" FaultRoutineName="fault" Disabled="false">
<Description>
<![CDATA[Validate output condition during Prescan.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="prescan_request" TagType="Base" DataType="prescan_request" Constant="false" ExternalAccess="None">
<Data>01 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="prescan_request">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_activeOutput" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_activeOutput">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="fault" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[No logic is required in this routine; it only exists as a target for the Prescan request JSR.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,prescan_request.done,pass_activeOutputPrescan,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIO(sm.active)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_activeOutput(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[prescan_request(prescan_request,prescan_pending)JSR(fault,1,PRESCAN_FAULT_CODE);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="activeOutput_scanFalse" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate output condition when AOI is scanned false.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_activeOutput" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_activeOutput">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_activeOutputScanFalse,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[NEQ(tc.scan,1)stateMachine_activeOutput(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIO(sm.active)unitTest_assertTrue(assertions[0],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="activeOutput_scanTrue" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate output condition when AOI is scanned true.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_activeOutput" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_activeOutput">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_activeOutputScanTrue,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_activeOutput(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.active)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_dequeue" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Confirm events are removed from the queue after dispatch to the state machine.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_dequeue" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_dequeue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueDequeue,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_dequeue(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.active)OTE(sm.event_e1);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Confirm the state machine remains in State1 after the event causes the transition to that state.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_State1)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_emptyPrescan" TestEdits="false" MainRoutineName="main" FaultRoutineName="fault" Disabled="false">
<Description>
<![CDATA[Confirm the queue is emptied during prescan.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="prescan_request" TagType="Base" DataType="prescan_request" Constant="false" ExternalAccess="None">
<Data>01 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="prescan_request">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_empty" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_empty">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_start" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="fault" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[No logic is required in this routine; it only exists as a target for the Prescan request JSR.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,prescan_request.done,pass_eventQueueEmptyPrescan,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger events just before entering Prescan so the event queue is not empty when the processor leaves run mode.]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_start)XIO(prescan_request.done)[OTE(sm.event_e1) ,OTE(sm.event_e2) ,OTE(sm.event_e3) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_empty(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Request prescan after the state machine has completed its initial transition for the first time.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_start)prescan_request(prescan_request,prescan_pending)JSR(fault,1,PRESCAN_FAULT_CODE);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Confirm the state machine remains at the start state after the second initial transition that occurs after coming out of Prescan.]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_start)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_emptyScanFalse" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Confirm the queue is emptied when scanned false.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_empty" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_empty">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_start" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueEmptyScanFalse,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Evaluate the state machine false on the scan immediately after the events are queued.
]]>
</Comment>
<Text>
<![CDATA[NEQ(tc.scan,2)stateMachine_eventQueue_empty(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Queue events the first time the state machine is scanned true.
]]>
</Comment>
<Text>
<![CDATA[EQU(tc.scan,0)[OTE(sm.event_e1) ,OTE(sm.event_e2) ,OTE(sm.event_e3) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Ensure the state machine does not leave the target of the initial transition after the false scan.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_start)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_fifoOrder" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Confirm events are queued and dequeued in the correct order.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_fifoOrder_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_fifoOrder_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State0" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State0" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State0" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State0" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super2" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueFifoOrder,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Energize the event outputs such that their rising edges will occur in successive scans.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.event_e2)OTE(sm.event_e3);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.event_e1)OTE(sm.event_e2);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.active)OTE(sm.event_e1);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_fifoOrder_s(sm);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_State3)unitTest_assertTrue(assertions[0],13,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_maxCapacity" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate the event queue can hold its configured number of events.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_maxCapacity" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_maxCapacity">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_state1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_state1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_state1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_state1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_state2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_state2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_state2" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_state2" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueMaxCapacity,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.active)[OTE(sm.event_e1) ,OTE(sm.event_e2) ,OTE(sm.event_e3) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_maxCapacity(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIO(sm.eventQ_overflow)unitTest_assertTrue(assertions[0],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_overflowFault" TestEdits="false" MainRoutineName="main" FaultRoutineName="fault" Disabled="false">
<Description>
<![CDATA[Confirm a major fault is raised upon a queue overflow.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="fault_check" TagType="Base" DataType="event_queue_overflow_fault" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="event_queue_overflow_fault">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="fault_pending" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True if a major fault should be generated on this scan.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_overflow" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_overflow">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e4" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_start" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="fault" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(fault_pending)event_queue_overflow_fault(fault_check);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueOverflowFault,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.active)[OTE(sm.event_e1) OTE(sm.event_e2) OTE(sm.event_e3) OTE(sm.event_e4) ,OTE(fault_pending) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_overflow(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(fault_check.done)unitTest_assertTrue(assertions[0],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_overflowOutputReset" TestEdits="false" MainRoutineName="main" FaultRoutineName="fault" Disabled="false">
<Description>
<![CDATA[Confirm the overflow output is reset during Prescan.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="fault_check" TagType="Base" DataType="event_queue_overflow_fault" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="event_queue_overflow_fault">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="fault_pending" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True if a major fault should be generated on this scan.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="prescan_request" TagType="Base" DataType="prescan_request" Constant="false" ExternalAccess="None">
<Data>01 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="prescan_request">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_overflow" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_overflow">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e4" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_start" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="fault" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(fault_pending)event_queue_overflow_fault(fault_check);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,prescan_request.done,pass_eventQueueOverflowOutputReset,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Confirm the overflow output has cleared on the first scan after the requested Prescan.
]]>
</Comment>
<Text>
<![CDATA[XIO(sm.eventQ_overflow)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.active)[OTE(sm.event_e1) OTE(sm.event_e2) OTE(sm.event_e3) OTE(sm.event_e4) ,OTE(fault_pending) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_overflow(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[Issue a request for Prescan after the overflow fault has been cleared.
]]>
</Comment>
<Text>
<![CDATA[XIC(fault_check.done)prescan_request(prescan_request,prescan_pending)JSR(fault,1,PRESCAN_FAULT_CODE);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="eventQ_overflowOutputSet" TestEdits="false" MainRoutineName="main" FaultRoutineName="fault" Disabled="false">
<Description>
<![CDATA[Confirm the overflow output is energized upon a queue overflow.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="1">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="fault_check" TagType="Base" DataType="event_queue_overflow_fault" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="event_queue_overflow_fault">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="done" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="fault_pending" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True if a major fault should be generated on this scan.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_eventQueue_overflow" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_eventQueue_overflow">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="active" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e1" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e2" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e3" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_e4" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_State1" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_start" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_start" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="fault" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(fault_pending)event_queue_overflow_fault(fault_check);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_eventQueueOverflowOutputSet,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.active)[OTE(sm.event_e1) OTE(sm.event_e2) OTE(sm.event_e3) OTE(sm.event_e4) ,OTE(fault_pending) ];]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_eventQueue_overflow(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.eventQ_overflow)unitTest_assertTrue(assertions[0],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_externalNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target not contained within the source's parent in single-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternalNested_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternalNested_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternalNested_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternalNested_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_externalNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target not contained within the source's parent in dual-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternalNested_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternalNested_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternalNested_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternalNested_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_externalNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target not contained within the source's parent in sequential-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternalNested_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternalNested_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternalNested_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternalNested_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[### Scan 7 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],7,tc);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],7,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],7,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],7,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[52],7,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[53],7,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[54],7,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[55],7,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[56],7,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[57],7,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[58],7,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[59],7,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],7,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],7,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],7,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],7,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Comment>
<![CDATA[### Scan 8 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],8,tc);]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],8,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],8,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],8,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[68],8,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[69],8,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[70],8,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[71],8,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[72],8,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[73],8,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[74],8,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[75],8,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],8,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],8,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],8,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],8,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_external_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target not contained within the source's parent in single-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternal_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternal_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternal_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternal_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_super)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_super)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_super)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_external_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target not contained within the source's parent in dual-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternal_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternal_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternal_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternal_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_super)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_super)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_super)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_super)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_external_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target not contained within the source's parent in sequential-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranExternal_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranExternal_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_super" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranExternal_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranExternal_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_super)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_super)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_super)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_super)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_super)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_super)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_super)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_super)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_super)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_localNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target contained within the source's parent in single-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocalNested_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocalNested_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocalNested_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocalNested_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_localNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target contained within the source's parent in dual-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocalNested_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocalNested_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocalNested_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocalNested_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_localNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a deeply-nested substate to a target contained within the source's parent in sequential-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="70" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="70">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocalNested_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocalNested_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocalNested_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocalNested_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[### Scan 7 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],7,tc);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],7,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],7,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],7,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[52],7,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[53],7,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[54],7,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[55],7,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[56],7,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[57],7,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[58],7,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[59],7,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[60],7,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],7,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[62],7,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],7,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_local_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target contained within the source's parent in single-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocal_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocal_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocal_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocal_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_local_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target contained within the source's parent in dual-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocal_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocal_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocal_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocal_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_local_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition from a substate to a target contained within the source's parent in sequential-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranLocal_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranLocal_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranLocal_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranLocal_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelfInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition, in single-scan transition mode, resulting from an event defined in a superstate, targeting the source substate, where the source has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelfInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelfInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_setup" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelfInitial_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelfInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the setup event immediately after the state machine is first scanned so the sub state will be exited after the initial transition completes.]]>
</Comment>
<Text>
<![CDATA[OTE(sm.event_setup);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the first scan so it will be queued after the setup event.]]>
</Comment>
<Text>
<![CDATA[XIO(s:fs)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelfInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition, in dual-scan transition mode, resulting from an event defined in a superstate, targeting the source substate, where the source has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelfInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelfInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_setup" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelfInitial_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelfInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the setup event immediately after the state machine is first scanned so the sub state will be exited after the initial transition completes.]]>
</Comment>
<Text>
<![CDATA[OTE(sm.event_setup);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the first scan so it will be queued after the setup event.]]>
</Comment>
<Text>
<![CDATA[XIO(s:fs)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelfInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition, in sequential-scan transition mode, resulting from an event defined in a superstate, targeting the source substate, where the source has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelfInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelfInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="event_setup" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelfInitial_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelfInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the setup event immediately after the state machine is first scanned so the sub state will be exited after the initial transition completes.]]>
</Comment>
<Text>
<![CDATA[OTE(sm.event_setup);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the first scan so it will be queued after the setup event.]]>
</Comment>
<Text>
<![CDATA[XIO(s:fs)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelf_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition resulting from an event defined in a superstate, targeting the source substate in single-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelf_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelf_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelf_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelf_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelf_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition resulting from an event defined in a superstate, targeting the source substate in dual-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelf_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelf_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelf_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelf_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSelf_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition resulting from an event defined in a superstate, targeting the source substate in sequential-scan transition mode.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSelf_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSelf_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSelf_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSelf_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSubInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in single-scan transition mode, resulting from an event defined in a superstate, with a target enclosed by the source and containing its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSubInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSubInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSubInitial_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSubInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_sub)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSubInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in dual-scan transition mode, resulting from an event defined in a superstate, with a target enclosed by the source and containing its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSubInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSubInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSubInitial_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSubInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_sub)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSubInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in sequential-scan transition mode, resulting from an event defined in a superstate, with a target enclosed by the source and containing its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSubInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSubInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSubInitial_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSubInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],5,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[37],5,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[38],5,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[39],5,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[40],5,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[41],5,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[42],5,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[43],5,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[44],5,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[45],5,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_sub)unitTest_assertTrue(assertions[46],5,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_sub)unitTest_assertTrue(assertions[47],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSub_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in single-scan transition mode, resulting from an event defined in a superstate, targeting a substate enclosed by the source.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSub_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSub_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSub_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSub_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSub_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in dual-scan transition mode, resulting from an event defined in a superstate, targeting a substate enclosed by the source.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSub_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSub_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSub_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSub_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSub_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in sequential-scan transition mode, resulting from an event defined in a superstate, targeting a substate enclosed by the source.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSub_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSub_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSub_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSub_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuperInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in single-scan transition mode, resulting from an event defined in a superstate, targeting an enclosing superstate that has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="32" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="32">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuperInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuperInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuperInitial_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuperInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuperInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in dual-scan transition mode, resulting from an event defined in a superstate, targeting an enclosing superstate that has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="32" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="32">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuperInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuperInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuperInitial_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuperInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuperInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in sequential-scan transition mode, resulting from an event defined in a superstate, targeting an enclosing superstate that has its own initial transition.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="48" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="48">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuperInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuperInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_sub" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuperInitial_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuperInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_sub)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_sub)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_sub)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_sub)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuper_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in single-scan transition mode, resulting from an event defined in an enclosing superstate, that targets an enclosing superstate.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="24" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="24">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuper_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuper_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuper_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuper_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuper_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in dual-scan transition mode, resulting from an event defined in an enclosing superstate, that targets an enclosing superstate.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="24" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="24">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuper_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuper_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuper_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuper_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="grpTran_toSuper_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Validate a transition in sequential-scan transition mode, resulting from an event defined in an enclosing superstate, that targets an enclosing superstate.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="36" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="36">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_grpTranToSuper_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_grpTranToSuper_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[unitTest_case(tc,1,pass_grpTranToSuper_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_grpTranToSuper_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],5,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],5,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],5,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],5,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],6,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],6,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],6,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],6,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],6,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],6,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[30],6,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[31],6,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="results" TestEdits="false" MainRoutineName="summary" Disabled="false">
<Tags>
<Tag Name="pass_activeOutput" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all active output tests have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_all" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all test cases have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_eventQueue" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all event queue tests have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_groupTransition" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all group transition tests have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitial" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all state machine initial transition tests have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transition" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all transition tests have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="summary" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This bit will be true when a unit test has intentionally created a major fault in order to force a Prescan. When this bit is set and the processor is faulted, clear the major fault and switch the processor to run mode, repeating as necessary until the processor remains in run mode and all tests pass.]]>
</Comment>
<Text>
<![CDATA[XIC(prescan_pending)NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(pass_activeOutput)XIC(pass_eventQueue)XIC(pass_groupTransition)XIC(pass_stateMachineInitial)XIC(pass_transition)OTE(pass_all);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(pass_activeOutputScanFalse)XIC(pass_activeOutputScanTrue)XIC(pass_activeOutputPrescan)OTE(pass_activeOutput);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(pass_eventQueueMaxCapacity)XIC(pass_eventQueueOverflowFault)XIC(pass_eventQueueOverflowOutputSet)XIC(pass_eventQueueOverflowOutputReset)XIC(pass_eventQueueEmptyScanFalse)XIC(pass_eventQueueEmptyPrescan)XIC(pass_eventQueueFifoOrder)XIC(pass_eventQueueDequeue)OTE(pass_eventQueue);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(pass_grpTranExternal_1)XIC(pass_grpTranExternal_2)XIC(pass_grpTranExternal_s)XIC(pass_grpTranExternalNested_1)XIC(pass_grpTranExternalNested_2)XIC(pass_grpTranExternalNested_s)XIC(pass_grpTranLocal_1)XIC(pass_grpTranLocal_2)XIC(pass_grpTranLocal_s)XIC(pass_grpTranLocalNested_1)XIC(pass_grpTranLocalNested_2)XIC(pass_grpTranLocalNested_s)XIC(pass_grpTranToSelf_1)XIC(pass_grpTranToSelf_2)XIC(pass_grpTranToSelf_s)XIC(pass_grpTranToSelfInitial_1)XIC(pass_grpTranToSelfInitial_2)XIC(pass_grpTranToSelfInitial_s)XIC(pass_grpTranToSub_1)XIC(pass_grpTranToSub_2)XIC(pass_grpTranToSub_s)XIC(pass_grpTranToSubInitial_1)XIC(pass_grpTranToSubInitial_2)XIC(pass_grpTranToSubInitial_s)XIC(pass_grpTranToSuper_1)XIC(pass_grpTranToSuper_2)XIC(pass_grpTranToSuper_s)XIC(pass_grpTranToSuperInitial_1)XIC(pass_grpTranToSuperInitial_2)XIC(pass_grpTranToSuperInitial_s)OTE(pass_groupTransition);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(pass_stateMachineInitialTop_single)XIC(pass_stateMachineInitialTop_dual)XIC(pass_stateMachineInitialTop_seq)XIC(pass_stateMachineInitialSubstate_single)XIC(pass_stateMachineInitialSubstate_dual)XIC(pass_stateMachineInitialSubstate_seq)XIC(pass_stateMachineInitSubstateNest_single)XIC(pass_stateMachineInitSubstateNest_dual)XIC(pass_stateMachineInitSubstateNest_seq)XIC(pass_stateMachineInitSuperInit_single)XIC(pass_stateMachineInitSuperInit_dual)XIC(pass_stateMachineInitSuperInit_seq)XIC(pass_stateMachineInitSuperInitNest_1)XIC(pass_stateMachineInitSuperInitNest_2)XIC(pass_stateMachineInitSuperInitNest_s)OTE(pass_stateMachineInitial);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(pass_transitionTopSibling_1)XIC(pass_transitionTopSibling_2)XIC(pass_transitionTopSibling_s)XIC(pass_transitionSubstateSibling_1)XIC(pass_transitionSubstateSibling_2)XIC(pass_transitionSubstateSibling_s)XIC(pass_transitionToSuperstate_1)XIC(pass_transitionToSuperstate_2)XIC(pass_transitionToSuperstate_s)XIC(pass_transitionToSuperNested_1)XIC(pass_transitionToSuperNested_2)XIC(pass_transitionToSuperNested_s)XIC(pass_transitionToSubstate_1)XIC(pass_transitionToSubstate_2)XIC(pass_transitionToSubstate_s)XIC(pass_transitionToSubstateNested_1)XIC(pass_transitionToSubstateNested_2)XIC(pass_transitionToSubstateNested_s)XIC(pass_transitionSuperstateExit_1)XIC(pass_transitionSuperstateExit_2)XIC(pass_transitionSuperstateExit_s)XIC(pass_transitionSuperExitNest_1)XIC(pass_transitionSuperExitNest_2)XIC(pass_transitionSuperExitNest_s)XIC(pass_transitionSuperstateEntry_1)XIC(pass_transitionSuperstateEntry_2)XIC(pass_transitionSuperstateEntry_s)XIC(pass_transitionSuperEntryNest_1)XIC(pass_transitionSuperEntryNest_2)XIC(pass_transitionSuperEntryNest_s)XIC(pass_transitionSuperInitial_1)XIC(pass_transitionSuperInitial_2)XIC(pass_transitionSuperInitial_s)XIC(pass_transitionSuperInitNest_1)XIC(pass_transitionSuperInitNest_2)XIC(pass_transitionSuperInitNest_s)XIC(pass_transitionFromSubstateInitial_1)XIC(pass_transitionFromSubstateInitial_2)XIC(pass_transitionFromSubstateInitial_s)XIC(pass_transitionFromSubstateInitNest_1)XIC(pass_transitionFromSubstateInitNest_2)XIC(pass_transitionFromSubstateInitNest_s)OTE(pass_transition);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[unitTest_master(master);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substateNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSubstateNest_single,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substateNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSubstateNest_dual,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substateNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSubstateNest_seq,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],2,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],2,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],2,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[27],2,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[28],2,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[29],2,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[30],2,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[31],2,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[32],2,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[33],2,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[34],2,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[35],3,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[36],3,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[37],3,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[38],3,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[40],3,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[41],3,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[42],3,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[43],3,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[44],3,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[45],3,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[46],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substate_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialSubstate_single,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substate_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialSubstate_dual,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_substate_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialSubstate_seq,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],2,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],2,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],2,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],2,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],2,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],2,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],2,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInitNest_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInitNest_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInitNest_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],2,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],2,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],2,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],2,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],2,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],2,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[30],2,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[31],2,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],2,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],2,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],2,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],2,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],3,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],3,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],3,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],3,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],3,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],3,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],3,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],3,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],3,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],3,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInit_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInit_single,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInit_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInit_dual,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_superInit_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitSuperInit_seq,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Rung 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],2,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],2,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],2,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],2,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],2,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],2,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],2,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_top_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialTop_single,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_1(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_top_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialTop_dual,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_2(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="smInit_top_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_stateMachineInitialTop_seq,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_s(sm);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="task_dispatch" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags/>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This program handles triggering tasks containing logic for the actual unit tests, which reside in event tasks as an organizational construct and to provide sufficient space for unit test programs as a task is limited to 32 programs. The event tasks are only triggered from this continuous task so they execute synchronously with this task, resulting in behavior similar to a JSR.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[EVENT(_activeOutput);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[EVENT(_eventQueue);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[EVENT(_groupTransition);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[EVENT(_stateMachineInitial);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[EVENT(_transition);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitialNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitialNested_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitialNested_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to the top-level super-state where the super-state has its own initial transition in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitNest_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitialNested_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitialNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitialNested_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitialNested_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to the top-level super-state where the super-state has its own initial transition in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitNest_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitialNested_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitialNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitialNested_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitialNested_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to the top-level super-state where the super-state has its own initial transition in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitNest_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitialNested_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state where the super-state has its own initial transition in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitial_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state where the super-state has its own initial transition in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitial_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_fromSubstateInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_fromSubstateInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_fromSubstateInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_substate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state where the super-state has its own initial transition in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionFromSubstateInitial_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_fromSubstateInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_substate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_substate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_substate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_substate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_substateSibling_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSubstateSibling_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_substateSibling_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSubstateSibling_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_substateSibling_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSubstateSibling_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superEntryNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperEntryNest_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superEntryNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperEntryNest_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superEntryNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperEntryNest_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],5,tc);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],5,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],5,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],5,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[52],5,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[53],5,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[54],5,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[55],5,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[56],5,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[57],5,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[58],5,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[59],5,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],5,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],5,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],5,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],5,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],6,tc);]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],6,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],6,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],6,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[68],6,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[69],6,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[70],6,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[71],6,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[72],6,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[73],6,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[74],6,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[75],6,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],6,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],6,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],6,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superExitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperExitNest_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superExitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperExitNest_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superExitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperExitNest_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[### Scan 7 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],7,tc);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],7,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],7,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],7,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[52],7,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[53],7,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[54],7,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[55],7,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[56],7,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[57],7,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[58],7,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[59],7,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],7,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],7,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],7,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],7,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Comment>
<![CDATA[### Scan 8 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],8,tc);]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],8,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],8,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],8,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[68],8,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[69],8,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[70],8,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[71],8,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[72],8,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[73],8,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[74],8,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[75],8,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],8,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],8,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],8,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],8,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitial_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitial_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitial_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],5,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],5,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],5,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],5,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],5,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],5,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],5,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],5,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],5,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],5,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],5,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateEntry_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateEntry_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateEntry_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateEntry_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateEntry_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateEntry_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],5,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],5,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],5,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],5,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],5,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],5,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],5,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],5,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],5,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],5,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],5,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateExit_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateExit_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateExit_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateExit_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_superstateExit_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperstateExit_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_topSibling_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionTopSibling_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_topSibling_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionTopSibling_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_topSibling_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionTopSibling_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstateNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstateNested_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstateNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstateNested_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstateNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstateNested_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstate_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstate_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstate_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstate_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSubstate_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSubstate_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperInitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitNest_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperInitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitNest_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperInitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionSuperInitNest_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],5,tc);]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],5,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],5,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],5,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[52],5,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[53],5,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[54],5,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[55],5,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[56],5,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[57],5,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[58],5,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[59],5,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],5,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],5,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],5,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],5,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],6,tc);]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],6,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],6,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],6,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[68],6,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[69],6,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[70],6,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[71],6,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[72],6,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[73],6,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[74],6,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[75],6,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],6,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],6,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],6,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperNested_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperNested_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperNested_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],5,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],5,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],5,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],5,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],6,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],6,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],6,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],6,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],6,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],6,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[30],6,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[31],6,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperstate_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperstate_1,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperstate_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperstate_2,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="tran_toSuperstate_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="setup_done" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,1,pass_transitionToSuperstate_s,master)JSR(test,0);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="test" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
</Programs>
<Tasks>
<Task Name="main" Type="CONTINUOUS" Priority="10" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<ScheduledPrograms>
<ScheduledProgram Name="results"/>
<ScheduledProgram Name="task_dispatch"/>
</ScheduledPrograms>
</Task>
<Task Name="_activeOutput" Type="EVENT" Rate="10" Priority="1" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<Description>
<![CDATA[Tests validating operation of the active boolean AOI output.]]>
</Description>
<EventInfo EventTrigger="EVENT Instruction Only" EnableTimeout="false"/>
<ScheduledPrograms>
<ScheduledProgram Name="activeOutput_scanFalse"/>
<ScheduledProgram Name="activeOutput_scanTrue"/>
<ScheduledProgram Name="activeOutput_prescan"/>
</ScheduledPrograms>
</Task>
<Task Name="_eventQueue" Type="EVENT" Rate="10" Priority="1" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<Description>
<![CDATA[Tests exercising event queue operation.]]>
</Description>
<EventInfo EventTrigger="EVENT Instruction Only" EnableTimeout="false"/>
<ScheduledPrograms>
<ScheduledProgram Name="eventQ_maxCapacity"/>
<ScheduledProgram Name="eventQ_overflowFault"/>
<ScheduledProgram Name="eventQ_overflowOutputSet"/>
<ScheduledProgram Name="eventQ_overflowOutputReset"/>
<ScheduledProgram Name="eventQ_emptyScanFalse"/>
<ScheduledProgram Name="eventQ_emptyPrescan"/>
<ScheduledProgram Name="eventQ_fifoOrder"/>
<ScheduledProgram Name="eventQ_dequeue"/>
</ScheduledPrograms>
</Task>
<Task Name="_groupTransition" Type="EVENT" Rate="10" Priority="1" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<Description>
<![CDATA[Tests validating group transitions as defined by UML v2.5.1, 14.2.3.8.2.]]>
</Description>
<EventInfo EventTrigger="EVENT Instruction Only" EnableTimeout="false"/>
<ScheduledPrograms>
<ScheduledProgram Name="grpTran_external_1"/>
<ScheduledProgram Name="grpTran_external_2"/>
<ScheduledProgram Name="grpTran_external_s"/>
<ScheduledProgram Name="grpTran_externalNested_1"/>
<ScheduledProgram Name="grpTran_externalNested_2"/>
<ScheduledProgram Name="grpTran_externalNested_s"/>
<ScheduledProgram Name="grpTran_local_1"/>
<ScheduledProgram Name="grpTran_local_2"/>
<ScheduledProgram Name="grpTran_local_s"/>
<ScheduledProgram Name="grpTran_localNested_1"/>
<ScheduledProgram Name="grpTran_localNested_2"/>
<ScheduledProgram Name="grpTran_localNested_s"/>
<ScheduledProgram Name="grpTran_toSelf_1"/>
<ScheduledProgram Name="grpTran_toSelf_2"/>
<ScheduledProgram Name="grpTran_toSelf_s"/>
<ScheduledProgram Name="grpTran_toSelfInitial_1"/>
<ScheduledProgram Name="grpTran_toSelfInitial_2"/>
<ScheduledProgram Name="grpTran_toSelfInitial_s"/>
<ScheduledProgram Name="grpTran_toSub_1"/>
<ScheduledProgram Name="grpTran_toSub_2"/>
<ScheduledProgram Name="grpTran_toSub_s"/>
<ScheduledProgram Name="grpTran_toSubInitial_1"/>
<ScheduledProgram Name="grpTran_toSubInitial_2"/>
<ScheduledProgram Name="grpTran_toSubInitial_s"/>
<ScheduledProgram Name="grpTran_toSuper_1"/>
<ScheduledProgram Name="grpTran_toSuper_2"/>
<ScheduledProgram Name="grpTran_toSuper_s"/>
<ScheduledProgram Name="grpTran_toSuperInitial_1"/>
<ScheduledProgram Name="grpTran_toSuperInitial_2"/>
<ScheduledProgram Name="grpTran_toSuperInitial_s"/>
</ScheduledPrograms>
</Task>
<Task Name="_stateMachineInitial" Type="EVENT" Rate="10" Priority="1" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<Description>
<![CDATA[Tests validating the top-level initial transition of an entire state machine.]]>
</Description>
<EventInfo EventTrigger="EVENT Instruction Only" EnableTimeout="false"/>
<ScheduledPrograms>
<ScheduledProgram Name="smInit_top_1"/>
<ScheduledProgram Name="smInit_top_2"/>
<ScheduledProgram Name="smInit_top_s"/>
<ScheduledProgram Name="smInit_superInit_1"/>
<ScheduledProgram Name="smInit_superInit_2"/>
<ScheduledProgram Name="smInit_superInit_s"/>
<ScheduledProgram Name="smInit_superInitNest_1"/>
<ScheduledProgram Name="smInit_superInitNest_2"/>
<ScheduledProgram Name="smInit_superInitNest_s"/>
<ScheduledProgram Name="smInit_substate_1"/>
<ScheduledProgram Name="smInit_substate_2"/>
<ScheduledProgram Name="smInit_substate_s"/>
<ScheduledProgram Name="smInit_substateNested_1"/>
<ScheduledProgram Name="smInit_substateNested_2"/>
<ScheduledProgram Name="smInit_substateNested_s"/>
</ScheduledPrograms>
</Task>
<Task Name="_transition" Type="EVENT" Rate="10" Priority="1" Watchdog="500" DisableUpdateOutputs="true" InhibitTask="false">
<Description>
<![CDATA[Tests validation transitions between states.]]>
</Description>
<EventInfo EventTrigger="EVENT Instruction Only" EnableTimeout="false"/>
<ScheduledPrograms>
<ScheduledProgram Name="tran_topSibling_1"/>
<ScheduledProgram Name="tran_topSibling_2"/>
<ScheduledProgram Name="tran_topSibling_s"/>
<ScheduledProgram Name="tran_substateSibling_1"/>
<ScheduledProgram Name="tran_substateSibling_2"/>
<ScheduledProgram Name="tran_substateSibling_s"/>
<ScheduledProgram Name="tran_toSuperstate_1"/>
<ScheduledProgram Name="tran_toSuperstate_2"/>
<ScheduledProgram Name="tran_toSuperstate_s"/>
<ScheduledProgram Name="tran_toSuperNested_1"/>
<ScheduledProgram Name="tran_toSuperNested_2"/>
<ScheduledProgram Name="tran_toSuperNested_s"/>
<ScheduledProgram Name="tran_toSubstate_1"/>
<ScheduledProgram Name="tran_toSubstate_2"/>
<ScheduledProgram Name="tran_toSubstate_s"/>
<ScheduledProgram Name="tran_toSubstateNested_1"/>
<ScheduledProgram Name="tran_toSubstateNested_2"/>
<ScheduledProgram Name="tran_toSubstateNested_s"/>
<ScheduledProgram Name="tran_superstateExit_1"/>
<ScheduledProgram Name="tran_superstateExit_2"/>
<ScheduledProgram Name="tran_superstateExit_s"/>
<ScheduledProgram Name="tran_superExitNest_1"/>
<ScheduledProgram Name="tran_superExitNest_2"/>
<ScheduledProgram Name="tran_superExitNest_s"/>
<ScheduledProgram Name="tran_superstateEntry_1"/>
<ScheduledProgram Name="tran_superstateEntry_2"/>
<ScheduledProgram Name="tran_superstateEntry_s"/>
<ScheduledProgram Name="tran_superEntryNest_1"/>
<ScheduledProgram Name="tran_superEntryNest_2"/>
<ScheduledProgram Name="tran_superEntryNest_s"/>
<ScheduledProgram Name="tran_superInitial_1"/>
<ScheduledProgram Name="tran_superInitial_2"/>
<ScheduledProgram Name="tran_superInitial_s"/>
<ScheduledProgram Name="tran_toSuperInitNest_1"/>
<ScheduledProgram Name="tran_toSuperInitNest_2"/>
<ScheduledProgram Name="tran_toSuperInitNest_s"/>
<ScheduledProgram Name="tran_fromSubstateInitial_1"/>
<ScheduledProgram Name="tran_fromSubstateInitial_2"/>
<ScheduledProgram Name="tran_fromSubstateInitial_s"/>
<ScheduledProgram Name="tran_fromSubstateInitialNested_1"/>
<ScheduledProgram Name="tran_fromSubstateInitialNested_2"/>
<ScheduledProgram Name="tran_fromSubstateInitialNested_s"/>
</ScheduledPrograms>
</Task>
</Tasks>
<CommPorts>
<SerialPort Channel="0" BaudRate="19200" Parity="No Parity" DataBits="8 Bits of Data" StopBits="1 Stop Bit" ComDriverId="DF1" RTSOffDelay="0" RTSSendDelay="0" ControlLine="No Handshake" RemoteModeChangeFlag="false" ModeChangeAttentionChar="27"
 SystemModeCharacter="83" UserModeCharacter="85" DCDWaitDelay="0">
<ASCII XONXOFFEnable="false" DeleteMode="0" EchoMode="0" TerminationChars="65293" AppendChars="2573" BufferSize="82"/>
<DF1 DuplicateDetection="true" ErrorDetection="BCC Error" EmbeddedResponseEnable="Autodetect" DF1Mode="Pt to Pt" ACKTimeout="50" NAKReceiveLimit="3" ENQTransmitLimit="3" TransmitRetries="3" StationAddress="0" ReplyMessageWait="5" PollingMode="Message Based (slave can initiate messages)"
 MasterMessageTransmit="Between station polls" NormalPollNodeFile="&lt;NA&gt;" NormalPollGroupSize="0" PriorityPollNodeFile="&lt;NA&gt;" ActiveStationFile="&lt;NA&gt;" SlavePollTimeout="3000" EOTSuppression="0" MaxStationAddress="31" TokenHoldFactor="1" EnableStoreFwd="false" StoreFwdFile="&lt;NA&gt;"
/>
</SerialPort>
</CommPorts>
<CST MasterID="0"/>
<WallClockTime LocalTimeAdjustment="0" TimeZone="0"/>
<Trends/>
<TimeSynchronize Priority1="128" Priority2="128" PTPEnable="false"/>
</Controller>
</RSLogix5000Content>
