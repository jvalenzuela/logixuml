<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="20.01" TargetName="unitttest" TargetType="Controller" ContainsContext="false" Owner="admin" ExportDate="Thu Feb 04 04:29:42 2021" ExportOptions="DecoratedData ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Target" Name="unitttest" ProcessorType="Emulator" MajorRev="20" MinorRev="11" TimeSlice="20" ShareUnusedTimeSlice="1" ProjectCreationDate="Thu Feb 04 03:54:15 2021" LastModifiedDate="Thu Feb 04 04:19:05 2021" SFCExecutionControl="CurrentActive" SFCRestartPosition="MostRecent"
 SFCLastScan="DontScan" ProjectSN="16#0000_0000" MatchProjectToController="false" CanUseRPIFromProducer="false" InhibitAutomaticFirmwareUpdate="0">
<RedundancyInfo Enabled="false" KeepTestEditsOnSwitchOver="false" IOMemoryPadPercentage="90" DataTablePadPercentage="50"/>
<Security Code="0" ChangesToDetect="16#ffff_ffff_ffff_ffff"/>
<SafetyInfo/>
<DataTypes/>
<Modules>
<Module Name="Local" CatalogNumber="Emulator" Vendor="1" ProductType="14" ProductCode="53" Major="20" Minor="11" ParentModule="Local" ParentModPortId="1" Inhibited="false" MajorFault="true"
>
<EKey State="ExactMatch"/>
<Ports>
<Port Id="1" Address="2" Type="ICP" Upstream="false">
<Bus Size="10"/>
</Port>
</Ports>
</Module>
</Modules>
<AddOnInstructionDefinitions>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.050Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:24.509Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.178Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:34.702Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.306Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:56.947Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.438Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:10.540Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.540Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:31.651Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.646Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:40.266Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.745Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:30.322Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.908Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:37.736Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.071Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:47.830Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.242Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:58.121Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.406Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:07.759Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.567Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:21.351Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.740Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:33.454Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.871Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:45.496Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:51.003Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:54.997Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T13:02:48.710Z" CreatedBy="Not Available" EditedDate="2021-08-12T13:21:24.272Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T02:22:55.595Z" CreatedBy="Not Available" EditedDate="2021-08-13T05:49:19.072Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSubstateSibling_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T05:30:37.516Z" CreatedBy="Not Available" EditedDate="2021-08-13T05:49:29.706Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-21T01:53:28.215Z" CreatedBy="Not Available" EditedDate="2021-08-21T02:10:10.190Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-21T05:43:30.778Z" CreatedBy="Not Available" EditedDate="2021-08-21T07:01:43.364Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperEntryNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-24T02:29:40.747Z" CreatedBy="Not Available" EditedDate="2021-08-24T03:19:56.106Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T05:05:43.731Z" CreatedBy="Not Available" EditedDate="2021-08-19T05:54:04.992Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T06:51:49.684Z" CreatedBy="Not Available" EditedDate="2021-08-19T07:15:47.033Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperExitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-19T07:54:20.841Z" CreatedBy="Not Available" EditedDate="2021-08-19T08:48:22.122Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-25T06:00:55.923Z" CreatedBy="Not Available" EditedDate="2021-08-25T06:13:18.384Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-25T08:48:06.005Z" CreatedBy="Not Available" EditedDate="2021-08-25T09:05:29.793Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitial_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T03:10:29.791Z" CreatedBy="Not Available" EditedDate="2021-08-26T03:39:35.721Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T08:24:57.805Z" CreatedBy="Not Available" EditedDate="2021-08-26T09:16:32.215Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-26T09:24:19.050Z" CreatedBy="Not Available" EditedDate="2021-08-27T02:36:59.923Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperInitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-27T02:41:03.908Z" CreatedBy="Not Available" EditedDate="2021-08-27T07:46:35.975Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T02:19:23.904Z" CreatedBy="Not Available" EditedDate="2021-08-20T02:31:33.674Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T04:37:36.239Z" CreatedBy="Not Available" EditedDate="2021-08-20T04:48:45.920Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateEntry_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-20T06:34:08.318Z" CreatedBy="Not Available" EditedDate="2021-08-20T06:53:46.803Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T06:00:22.181Z" CreatedBy="Not Available" EditedDate="2021-08-18T06:16:52.939Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T06:29:28.124Z" CreatedBy="Not Available" EditedDate="2021-08-18T07:15:41.804Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionSuperstateExit_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-18T07:50:04.801Z" CreatedBy="Not Available" EditedDate="2021-08-18T08:25:18.435Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T05:34:52.436Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:19:20.836Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T05:46:47.652Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:20:58.111Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionTopSibling_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-12T06:14:20.948Z" CreatedBy="Not Available" EditedDate="2021-08-12T06:21:08.112Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T06:55:53.323Z" CreatedBy="Not Available" EditedDate="2021-08-17T07:15:14.742Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T08:39:47.444Z" CreatedBy="Not Available" EditedDate="2021-08-17T08:45:30.610Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstateNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T12:32:48.397Z" CreatedBy="Not Available" EditedDate="2021-08-17T12:54:59.950Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T01:56:11.528Z" CreatedBy="Not Available" EditedDate="2021-08-17T02:06:37.011Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T03:08:51.882Z" CreatedBy="Not Available" EditedDate="2021-08-17T03:12:47.943Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSubstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-17T05:17:48.841Z" CreatedBy="Not Available" EditedDate="2021-08-17T05:21:49.176Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T05:48:08.453Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:05:03.193Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-16T06:06:10.456Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:15:50.737Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperNested_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-16T06:19:31.100Z" CreatedBy="Not Available" EditedDate="2021-08-16T06:33:28.736Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-13T07:22:55.925Z" CreatedBy="Not Available" EditedDate="2021-08-13T07:52:07.116Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T01:26:01.103Z" CreatedBy="Not Available" EditedDate="2021-08-14T01:34:59.143Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_transitionToSuperstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-14T03:08:38.549Z" CreatedBy="Not Available" EditedDate="2021-08-14T03:18:42.408Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="event_e" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Rising edge to deliver this event to the state machine.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_source" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the source state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ons_e" DataType="BOOL" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_case" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-02T13:30:44.005Z" CreatedBy="VM\Admin" EditedDate="2021-08-09T08:58:41.724Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Unit Test Case]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="pass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True when all configured scans have been executed with no assertion failures.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if one or more assertions failed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[Current scan being executed, zero-based.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="assert_fail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[Interface for assertion AOIs to cancel the test; true to stop the test.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="last_scan" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Highest scan defined by an associated assertion AOI.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This instruction oversees the execution of a single test case where a function is validated throughout a series of scans. It is used with a set of assertion AOIs to confirm required conditions at each scan.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Capture the final scan set by the assertion AOIs and reset the scan counter to begin the test. The scan counter is reset to -1 so the first scan will be 0.]]>
</Comment>
<Text>
<![CDATA[XIC(s:fs)[MOV(scan,last_scan) ,MOV(-1,scan) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[[EQU(scan,last_scan) XIO(assert_fail) ,XIC(pass) ]OTE(pass);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(assert_fail)OTE(fail);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Incremenet the scan counter while the test is in progress.
]]>
</Comment>
<Text>
<![CDATA[XIO(pass)XIO(fail)ADD(scan,1,scan);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Reset the scan counter after the test completes.
]]>
</Comment>
<Text>
<![CDATA[[XIC(pass) ,XIC(fail) ]MOV(-1,scan);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Clear the scan counter in preparation for assertion AOIs to register the last scan number during their prescan.]]>
</Comment>
<Text>
<![CDATA[CLR(scan);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[OTU(assert_fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_assertTrue" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2021-08-02T13:33:20.895Z" CreatedBy="VM\Admin" EditedDate="2021-08-03T13:09:20.943Z" EditedBy="VM\Admin" SoftwareRevision="v20.00">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[Scan number where this condition must be true.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="unit_test_case" TagType="Base" DataType="unitTest_case" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Parent test case.]]>
</Description>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if this assertion was not true on the target scan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags/>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Register an assertion failure if this instruction is scanned false at the target test scan.
]]>
</Comment>
<Text>
<![CDATA[EQU(unit_test_case.scan,scan)OTL(fail);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Signal the controlling unitTest_case AOI that an assertion has failed.
]]>
</Comment>
<Text>
<![CDATA[XIC(fail)OTL(unit_test_case.assert_fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This instruction confirms a boolean condition is true at a single scan during a unit test case. No logic exists in this routine since EnableIn true requires no action; see the EnableInFalse routine for failure semantics.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Update the final scan number if this assertion has been defined with a higher scan number. This is how the parent test case determines the total number of scans in the test.
]]>
</Comment>
<Text>
<![CDATA[GRT(scan,unit_test_case.scan)MOV(scan,unit_test_case.scan);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[OTU(fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
<Tags>
<Tag Name="pass_stateMachineInitialSubstate_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSuperInit_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSubstateSibling_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperEntryNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperExitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitial_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperInitNest_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateEntry_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionSuperstateExit_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionTopSibling_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstateNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSubstate_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperNested_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_1" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_2" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_transitionToSuperstate_s" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Programs>
<Program Name="results" TestEdits="false" MainRoutineName="summary" Disabled="false">
<Tags>
<Tag Name="pass_all" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all test cases have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="summary" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(pass_stateMachineInitialTop_single)XIC(pass_stateMachineInitialTop_dual)XIC(pass_stateMachineInitialTop_seq)XIC(pass_stateMachineInitialSubstate_single)XIC(pass_stateMachineInitialSubstate_dual)XIC(pass_stateMachineInitialSubstate_seq)XIC(pass_stateMachineInitSubstateNest_single)XIC(pass_stateMachineInitSubstateNest_dual)XIC(pass_stateMachineInitSubstateNest_seq)XIC(pass_stateMachineInitSuperInit_single)XIC(pass_stateMachineInitSuperInit_dual)XIC(pass_stateMachineInitSuperInit_seq)XIC(pass_stateMachineInitSuperInitNest_1)XIC(pass_stateMachineInitSuperInitNest_2)XIC(pass_stateMachineInitSuperInitNest_s)XIC(pass_transitionTopSibling_1)XIC(pass_transitionTopSibling_2)XIC(pass_transitionTopSibling_s)XIC(pass_transitionSubstateSibling_1)XIC(pass_transitionSubstateSibling_2)XIC(pass_transitionSubstateSibling_s)XIC(pass_transitionToSuperstate_1)XIC(pass_transitionToSuperstate_2)XIC(pass_transitionToSuperstate_s)XIC(pass_transitionToSuperNested_1)XIC(pass_transitionToSuperNested_2)XIC(pass_transitionToSuperNested_s)XIC(pass_transitionToSubstate_1)XIC(pass_transitionToSubstate_2)XIC(pass_transitionToSubstate_s)XIC(pass_transitionToSubstateNested_1)XIC(pass_transitionToSubstateNested_2)XIC(pass_transitionToSubstateNested_s)XIC(pass_transitionSuperstateExit_1)XIC(pass_transitionSuperstateExit_2)XIC(pass_transitionSuperstateExit_s)XIC(pass_transitionSuperExitNest_1)XIC(pass_transitionSuperExitNest_2)XIC(pass_transitionSuperExitNest_s)XIC(pass_transitionSuperstateEntry_1)XIC(pass_transitionSuperstateEntry_2)XIC(pass_transitionSuperstateEntry_s)XIC(pass_transitionSuperEntryNest_1)XIC(pass_transitionSuperEntryNest_2)XIC(pass_transitionSuperEntryNest_s)XIC(pass_transitionSuperInitial_1)XIC(pass_transitionSuperInitial_2)XIC(pass_transitionSuperInitial_s)XIC(pass_transitionSuperInitNest_1)XIC(pass_transitionSuperInitNest_2)XIC(pass_transitionSuperInitNest_s)OTE(pass_all);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],2,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],2,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],2,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[27],2,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[28],2,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[29],2,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[30],2,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[31],2,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[32],2,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[33],2,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[34],2,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[35],3,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[36],3,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[37],3,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[38],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[40],3,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[41],3,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[42],3,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[43],3,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[44],3,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[45],3,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[46],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],2,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],2,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],2,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],2,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],2,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],2,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],2,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Top-level initial transition for the entire state machine that targets a sub-state.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialTop_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialTop_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialTop_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInitNest_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInitNest_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInitNest_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],2,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],2,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],2,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],2,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],2,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],2,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[30],2,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[31],2,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],2,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],2,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],2,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],2,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],3,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],3,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],3,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],3,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],3,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],3,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],3,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],3,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],3,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInit_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInit_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInit_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInit_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Rung 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],2,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],2,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],2,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],2,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],2,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],2,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],2,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitSuperInit_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSuperInit_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSuperInit_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a super-state that has its own initial transition in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSuperInit_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSuperInit_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionFromSubstateInitial" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a sub-state to its enclosing super-state where the super-state has its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionFromSubstateInitialNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a deeply-nested sub-state to the top-level super-state where the super-state has its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSubstateSibling_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSubstateSibling_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSubstateSibling_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSubstateSibling_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSubstateSibling_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSubstateSibling_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSubstateSibling_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a state within the same super-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSubstateSibling_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSubstateSibling_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperEntryNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperEntryNest_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperEntryNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperEntryNest_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperEntryNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperEntryNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperEntryNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a deeply-nested sub-state within a top-level super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperEntryNest_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperEntryNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],5,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],5,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],5,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],5,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[52],5,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[53],5,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[54],5,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[55],5,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[56],5,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[57],5,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[58],5,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[59],5,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],5,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],5,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],5,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],5,tc);]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],6,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],6,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],6,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],6,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[68],6,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[69],6,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[70],6,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[71],6,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[72],6,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[73],6,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[74],6,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[75],6,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],6,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],6,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],6,tc);]]>
</Text>
</Rung>
<Rung Number="87" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperExitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperExitNest_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperExitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperExitNest_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperExitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperExitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperExitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving a super-state from a deeply-nested sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperExitNest_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperExitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Comment>
<![CDATA[### Scan 7 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],7,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],7,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],7,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],7,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[52],7,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[53],7,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[54],7,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[55],7,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[56],7,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[57],7,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[58],7,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[59],7,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],7,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],7,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],7,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],7,tc);]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Comment>
<![CDATA[### Scan 8 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],8,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],8,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],8,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],8,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[68],8,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[69],8,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[70],8,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[71],8,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[72],8,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[73],8,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[74],8,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[75],8,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],8,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],8,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],8,tc);]]>
</Text>
</Rung>
<Rung Number="87" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],8,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitial_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitial_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitial_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitial_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitial_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitial_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitial_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitial_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitial_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],5,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],5,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],5,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],5,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],5,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],5,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],5,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],5,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],5,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],5,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],5,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitNest_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitNest_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitNest_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitNest_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperInitNest_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="80" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="80">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[50]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[51]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[52]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[53]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[54]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[55]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[56]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[57]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[58]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[59]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[60]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[61]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[62]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[63]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[64]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[65]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[66]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[67]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[68]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[69]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[70]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[71]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[72]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[73]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[74]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[75]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[76]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[77]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[78]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[79]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperInitNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperInitNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition to a super-state with its own initial transition targeting a deeply-nested sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperInitNest_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperInitNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],2,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],2,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],2,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[15],2,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[24],3,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[25],3,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[26],3,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[27],3,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[28],3,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[29],3,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[30],3,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[31],3,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[36],4,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[37],4,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[38],4,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[39],4,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[40],4,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[41],4,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[42],4,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[43],4,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],4,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],4,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[46],4,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[47],4,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="55" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[48],5,tc);]]>
</Text>
</Rung>
<Rung Number="56" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[49],5,tc);]]>
</Text>
</Rung>
<Rung Number="57" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[50],5,tc);]]>
</Text>
</Rung>
<Rung Number="58" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[51],5,tc);]]>
</Text>
</Rung>
<Rung Number="59" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[52],5,tc);]]>
</Text>
</Rung>
<Rung Number="60" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[53],5,tc);]]>
</Text>
</Rung>
<Rung Number="61" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[54],5,tc);]]>
</Text>
</Rung>
<Rung Number="62" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[55],5,tc);]]>
</Text>
</Rung>
<Rung Number="63" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[56],5,tc);]]>
</Text>
</Rung>
<Rung Number="64" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[57],5,tc);]]>
</Text>
</Rung>
<Rung Number="65" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[58],5,tc);]]>
</Text>
</Rung>
<Rung Number="66" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[59],5,tc);]]>
</Text>
</Rung>
<Rung Number="67" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[60],5,tc);]]>
</Text>
</Rung>
<Rung Number="68" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[61],5,tc);]]>
</Text>
</Rung>
<Rung Number="69" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[62],5,tc);]]>
</Text>
</Rung>
<Rung Number="70" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[63],5,tc);]]>
</Text>
</Rung>
<Rung Number="71" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="72" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[64],6,tc);]]>
</Text>
</Rung>
<Rung Number="73" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[65],6,tc);]]>
</Text>
</Rung>
<Rung Number="74" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[66],6,tc);]]>
</Text>
</Rung>
<Rung Number="75" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[67],6,tc);]]>
</Text>
</Rung>
<Rung Number="76" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[68],6,tc);]]>
</Text>
</Rung>
<Rung Number="77" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[69],6,tc);]]>
</Text>
</Rung>
<Rung Number="78" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[70],6,tc);]]>
</Text>
</Rung>
<Rung Number="79" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[71],6,tc);]]>
</Text>
</Rung>
<Rung Number="80" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[72],6,tc);]]>
</Text>
</Rung>
<Rung Number="81" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[73],6,tc);]]>
</Text>
</Rung>
<Rung Number="82" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[74],6,tc);]]>
</Text>
</Rung>
<Rung Number="83" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[75],6,tc);]]>
</Text>
</Rung>
<Rung Number="84" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[76],6,tc);]]>
</Text>
</Rung>
<Rung Number="85" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[77],6,tc);]]>
</Text>
</Rung>
<Rung Number="86" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[78],6,tc);]]>
</Text>
</Rung>
<Rung Number="87" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[79],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateEntry_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateEntry_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateEntry_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateEntry_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateEntry_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateEntry_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateEntry_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition targeting a sub-state within a super-state that does not contain the source state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateEntry_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateEntry_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],5,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],5,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],5,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],5,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],5,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],5,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],5,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],5,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],5,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],5,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],5,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],5,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateExit_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateExit_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateExit_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateExit_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionSuperstateExit_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionSuperstateExit_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionSuperstateExit_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition leaving the super-state containing the source sub-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionSuperstateExit_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionSuperstateExit_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],5,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],5,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],5,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],5,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[28],5,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[29],5,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[30],5,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[31],5,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[32],5,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],5,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[34],5,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],5,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[36],6,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[37],6,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[38],6,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[39],6,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[40],6,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[41],6,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[42],6,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_superstate)unitTest_assertTrue(assertions[43],6,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[44],6,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[45],6,tc);]]>
</Text>
</Rung>
<Rung Number="53" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[46],6,tc);]]>
</Text>
</Rung>
<Rung Number="54" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[47],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionTopSibling_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionTopSibling_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionTopSibling_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionTopSibling_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionTopSibling_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionTopSibling_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionTopSibling_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition between two, top-level states in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionTopSibling_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionTopSibling_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###

Test begins after the initial transition completes and the event is delivered to the state machine.
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[16],4,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[17],4,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[18],4,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[19],4,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],4,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],4,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],4,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstateNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstateNested_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstateNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstateNested_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstateNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstateNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstateNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstateNested_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstateNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],4,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],4,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[26],4,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[27],4,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],4,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],4,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[30],4,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[31],4,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],4,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],4,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],4,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstate_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstate_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstate_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstate_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSubstate_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSubstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSubstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a super-state to one of its sub-states in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSubstate_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSubstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperNested_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperNested_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperNested_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperNested_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],2,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],2,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],2,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],2,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],3,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],3,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],3,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[19],3,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],3,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],3,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],3,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperNested_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="40" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="40">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperNested_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperNested_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a deeply-nested sub-state to its top-level enclosing super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperNested_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperNested_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],4,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],4,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],4,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],4,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],4,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],4,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[6],4,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],4,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Comment>
<![CDATA[### Scan 5 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[12],5,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[13],5,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[14],5,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[15],5,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],5,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_mid)unitTest_assertTrue(assertions[17],5,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],5,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],5,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],5,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],5,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],5,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],5,tc);]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Comment>
<![CDATA[### Scan 6 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[24],6,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[25],6,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[26],6,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[27],6,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[28],6,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[29],6,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[30],6,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[31],6,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[32],6,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[33],6,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[34],6,tc);]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[35],6,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperstate_1" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in single-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperstate_1);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperstate_2" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in dual-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperstate_2);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],2,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],2,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],2,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],2,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],2,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],2,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],2,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],2,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],3,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],3,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],3,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],3,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],3,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],3,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],3,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionToSuperstate_s" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_transitionToSuperstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_transitionToSuperstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="event_e" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_source" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a sub-state to its enclosing super-state in sequential-scan transition mode.]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_transitionToSuperstate_s);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Trigger the test transition after the state machine initial transition has completed.
]]>
</Comment>
<Text>
<![CDATA[XIC(sm.stateDo_source)OTE(sm.event_e);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[stateMachine_transitionToSuperstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[0],3,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIC(sm.stateExit_source)unitTest_assertTrue(assertions[1],3,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[2],3,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_source)unitTest_assertTrue(assertions[3],3,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],3,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],3,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],3,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],3,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Comment>
<![CDATA[### Scan 4 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_source)unitTest_assertTrue(assertions[8],4,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_source)unitTest_assertTrue(assertions[9],4,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_source)unitTest_assertTrue(assertions[10],4,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_source)unitTest_assertTrue(assertions[11],4,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],4,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],4,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],4,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],4,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
</Programs>
<Tasks>
<Task Name="MainTask" Type="CONTINUOUS" Priority="10" Watchdog="500" DisableUpdateOutputs="false" InhibitTask="false">
<ScheduledPrograms>
<ScheduledProgram Name="results"/>
<ScheduledProgram Name="stateMachineInitialTop_single"/>
<ScheduledProgram Name="stateMachineInitialTop_dual"/>
<ScheduledProgram Name="stateMachineInitialTop_seq"/>
<ScheduledProgram Name="stateMachineInitialSubstate_single"/>
<ScheduledProgram Name="stateMachineInitialSubstate_dual"/>
<ScheduledProgram Name="stateMachineInitialSubstate_seq"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_single"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_dual"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_seq"/>
<ScheduledProgram Name="stateMachineInitSuperInit_single"/>
<ScheduledProgram Name="stateMachineInitSuperInit_dual"/>
<ScheduledProgram Name="stateMachineInitSuperInit_seq"/>
<ScheduledProgram Name="stateMachineInitSuperInitNest_1"/>
<ScheduledProgram Name="stateMachineInitSuperInitNest_2"/>
<ScheduledProgram Name="stateMachineInitSuperInitNest_s"/>
<ScheduledProgram Name="transitionTopSibling_1"/>
<ScheduledProgram Name="transitionTopSibling_2"/>
<ScheduledProgram Name="transitionTopSibling_s"/>
<ScheduledProgram Name="transitionSubstateSibling_1"/>
<ScheduledProgram Name="transitionSubstateSibling_2"/>
<ScheduledProgram Name="transitionSubstateSibling_s"/>
<ScheduledProgram Name="transitionToSuperstate_1"/>
<ScheduledProgram Name="transitionToSuperstate_2"/>
<ScheduledProgram Name="transitionToSuperstate_s"/>
<ScheduledProgram Name="transitionToSuperNested_1"/>
<ScheduledProgram Name="transitionToSuperNested_2"/>
<ScheduledProgram Name="transitionToSuperNested_s"/>
<ScheduledProgram Name="transitionToSubstate_1"/>
<ScheduledProgram Name="transitionToSubstate_2"/>
<ScheduledProgram Name="transitionToSubstate_s"/>
<ScheduledProgram Name="transitionToSubstateNested_1"/>
<ScheduledProgram Name="transitionToSubstateNested_2"/>
<ScheduledProgram Name="transitionToSubstateNested_s"/>
<ScheduledProgram Name="transitionSuperstateExit_1"/>
<ScheduledProgram Name="transitionSuperstateExit_2"/>
<ScheduledProgram Name="transitionSuperstateExit_s"/>
<ScheduledProgram Name="transitionSuperExitNest_1"/>
<ScheduledProgram Name="transitionSuperExitNest_2"/>
<ScheduledProgram Name="transitionSuperExitNest_s"/>
<ScheduledProgram Name="transitionSuperstateEntry_1"/>
<ScheduledProgram Name="transitionSuperstateEntry_2"/>
<ScheduledProgram Name="transitionSuperstateEntry_s"/>
<ScheduledProgram Name="transitionSuperEntryNest_1"/>
<ScheduledProgram Name="transitionSuperEntryNest_2"/>
<ScheduledProgram Name="transitionSuperEntryNest_s"/>
<ScheduledProgram Name="transitionSuperInitial_1"/>
<ScheduledProgram Name="transitionSuperInitial_2"/>
<ScheduledProgram Name="transitionSuperInitial_s"/>
<ScheduledProgram Name="transitionSuperInitNest_1"/>
<ScheduledProgram Name="transitionSuperInitNest_2"/>
<ScheduledProgram Name="transitionSuperInitNest_s"/>
<ScheduledProgram Name="transitionFromSubstateInitial"/>
<ScheduledProgram Name="transitionFromSubstateInitialNested"/>
</ScheduledPrograms>
</Task>
</Tasks>
<CommPorts>
<SerialPort Channel="0" BaudRate="19200" Parity="No Parity" DataBits="8 Bits of Data" StopBits="1 Stop Bit" ComDriverId="DF1" RTSOffDelay="0" RTSSendDelay="0" ControlLine="No Handshake" RemoteModeChangeFlag="false" ModeChangeAttentionChar="27"
 SystemModeCharacter="83" UserModeCharacter="85" DCDWaitDelay="0">
<ASCII XONXOFFEnable="false" DeleteMode="0" EchoMode="0" TerminationChars="65293" AppendChars="2573" BufferSize="82"/>
<DF1 DuplicateDetection="true" ErrorDetection="BCC Error" EmbeddedResponseEnable="Autodetect" DF1Mode="Pt to Pt" ACKTimeout="50" NAKReceiveLimit="3" ENQTransmitLimit="3" TransmitRetries="3" StationAddress="0" ReplyMessageWait="5" PollingMode="Message Based (slave can initiate messages)"
 MasterMessageTransmit="Between station polls" NormalPollNodeFile="&lt;NA&gt;" NormalPollGroupSize="0" PriorityPollNodeFile="&lt;NA&gt;" ActiveStationFile="&lt;NA&gt;" SlavePollTimeout="3000" EOTSuppression="0" MaxStationAddress="31" TokenHoldFactor="1" EnableStoreFwd="false" StoreFwdFile="&lt;NA&gt;"
/>
</SerialPort>
</CommPorts>
<CST MasterID="0"/>
<WallClockTime LocalTimeAdjustment="0" TimeZone="0"/>
<Trends/>
<TimeSynchronize Priority1="128" Priority2="128" PTPEnable="false"/>
</Controller>
</RSLogix5000Content>
