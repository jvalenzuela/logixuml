<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="20.01" TargetName="unitttest" TargetType="Controller" ContainsContext="false" Owner="admin" ExportDate="Thu Feb 04 04:29:42 2021" ExportOptions="DecoratedData ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Target" Name="unitttest" ProcessorType="Emulator" MajorRev="20" MinorRev="11" TimeSlice="20" ShareUnusedTimeSlice="1" ProjectCreationDate="Thu Feb 04 03:54:15 2021" LastModifiedDate="Thu Feb 04 04:19:05 2021" SFCExecutionControl="CurrentActive" SFCRestartPosition="MostRecent"
 SFCLastScan="DontScan" ProjectSN="16#0000_0000" MatchProjectToController="false" CanUseRPIFromProducer="false" InhibitAutomaticFirmwareUpdate="0">
<RedundancyInfo Enabled="false" KeepTestEditsOnSwitchOver="false" IOMemoryPadPercentage="90" DataTablePadPercentage="50"/>
<Security Code="0" ChangesToDetect="16#ffff_ffff_ffff_ffff"/>
<SafetyInfo/>
<DataTypes/>
<Modules>
<Module Name="Local" CatalogNumber="Emulator" Vendor="1" ProductType="14" ProductCode="53" Major="20" Minor="11" ParentModule="Local" ParentModPortId="1" Inhibited="false" MajorFault="true"
>
<EKey State="ExactMatch"/>
<Ports>
<Port Id="1" Address="2" Type="ICP" Upstream="false">
<Bus Size="10"/>
</Port>
</Ports>
</Module>
</Modules>
<AddOnInstructionDefinitions>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.050Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:24.509Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.178Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:34.702Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialSubstate_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.306Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:08:56.947Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.438Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:10.540Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.540Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:31.651Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitialTop_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.646Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:09:40.266Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.745Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:30.322Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:49.908Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:37.736Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSubNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.071Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:47.830Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.242Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:10:58.121Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.406Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:07.759Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInitNest_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.567Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:21.351Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_mid" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the mid state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_1" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.740Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:33.454Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_2" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:50.871Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:45.496Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="stateMachine_smInitSuperInit_s" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-09T08:07:51.003Z" CreatedBy="Not Available" EditedDate="2021-08-09T08:11:54.997Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="eventQ_overflow" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True if an overflow has occurred.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="eventQ_watermark" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Highest number of events stored.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_superstate" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the superstate state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateEntry_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine enters the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateExit_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine exits the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateDo_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="stateActive_target" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[True when the state machine is entering, exiting, or stable in the target state.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="cv" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="e" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="pf" DataType="DINT" Dimensions="1" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="1" Radix="Decimal">
<Element Index="[0]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="pfi" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="q" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00 00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="qh" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qt" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="qs" DataType="DINT" Radix="Decimal" ExternalAccess="Read/Write">
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_case" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2021-08-02T13:30:44.005Z" CreatedBy="VM\Admin" EditedDate="2021-08-09T08:58:41.724Z" EditedBy="G5Y9GH2\jvalenzuela" SoftwareRevision="v20.05">
<Description>
<![CDATA[Unit Test Case]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="pass" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True when all configured scans have been executed with no assertion failures.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if one or more assertions failed.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[Current scan being executed, zero-based.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="assert_fail" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="None">
<Description>
<![CDATA[Interface for assertion AOIs to cancel the test; true to stop the test.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="last_scan" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<Description>
<![CDATA[Highest scan defined by an associated assertion AOI.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This instruction oversees the execution of a single test case where a function is validated throughout a series of scans. It is used with a set of assertion AOIs to confirm required conditions at each scan.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Capture the final scan set by the assertion AOIs and reset the scan counter to begin the test. The scan counter is reset to -1 so the first scan will be 0.]]>
</Comment>
<Text>
<![CDATA[XIC(s:fs)[MOV(scan,last_scan) ,MOV(-1,scan) ];]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Text>
<![CDATA[[EQU(scan,last_scan) XIO(assert_fail) ,XIC(pass) ]OTE(pass);]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(assert_fail)OTE(fail);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Comment>
<![CDATA[Incremenet the scan counter while the test is in progress.
]]>
</Comment>
<Text>
<![CDATA[XIO(pass)XIO(fail)ADD(scan,1,scan);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Comment>
<![CDATA[Reset the scan counter after the test completes.
]]>
</Comment>
<Text>
<![CDATA[[XIC(pass) ,XIC(fail) ]MOV(-1,scan);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Clear the scan counter in preparation for assertion AOIs to register the last scan number during their prescan.]]>
</Comment>
<Text>
<![CDATA[CLR(scan);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[OTU(assert_fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="unitTest_assertTrue" Revision="1.0" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="true" CreatedDate="2021-08-02T13:33:20.895Z" CreatedBy="VM\Admin" EditedDate="2021-08-03T13:09:20.943Z" EditedBy="VM\Admin" SoftwareRevision="v20.00">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="scan" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[Scan number where this condition must be true.]]>
</Description>
<DefaultData>00 00 00 00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="unit_test_case" TagType="Base" DataType="unitTest_case" Usage="InOut" Required="true" Visible="true" Constant="false">
<Description>
<![CDATA[Parent test case.]]>
</Description>
</Parameter>
<Parameter Name="fail" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="None">
<Description>
<![CDATA[True if this assertion was not true on the target scan.]]>
</Description>
<DefaultData>00</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags/>
<Routines>
<Routine Name="EnableInFalse" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Register an assertion failure if this instruction is scanned false at the target test scan.
]]>
</Comment>
<Text>
<![CDATA[EQU(unit_test_case.scan,scan)OTL(fail);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Comment>
<![CDATA[Signal the controlling unitTest_case AOI that an assertion has failed.
]]>
</Comment>
<Text>
<![CDATA[XIC(fail)OTL(unit_test_case.assert_fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Logic" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[This instruction confirms a boolean condition is true at a single scan during a unit test case. No logic exists in this routine since EnableIn true requires no action; see the EnableInFalse routine for failure semantics.]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
</RLLContent>
</Routine>
<Routine Name="Prescan" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Update the final scan number if this assertion has been defined with a higher scan number. This is how the parent test case determines the total number of scans in the test.
]]>
</Comment>
<Text>
<![CDATA[GRT(scan,unit_test_case.scan)MOV(scan,unit_test_case.scan);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[OTU(fail);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
<Tags>
<Tag Name="pass_stateMachineInitialSubstate_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialSubstate_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitialTop_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_dual" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_seq" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
<Tag Name="pass_stateMachineInitSubstateNest_single" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Programs>
<Program Name="results" TestEdits="false" MainRoutineName="summary" Disabled="false">
<Tags>
<Tag Name="pass_all" TagType="Base" DataType="BOOL" Radix="Decimal" Constant="false" ExternalAccess="None">
<Description>
<![CDATA[True when all test cases have passed.]]>
</Description>
<Data>00</Data>
<Data Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="summary" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Text>
<![CDATA[XIC(pass_stateMachineInitialTop_single)XIC(pass_stateMachineInitialTop_dual)XIC(pass_stateMachineInitialTop_seq)XIC(pass_stateMachineInitialSubstate_single)XIC(pass_stateMachineInitialSubstate_dual)XIC(pass_stateMachineInitialSubstate_seq)XIC(pass_stateMachineInitSubstateNest_single)XIC(pass_stateMachineInitSubstateNest_dual)XIC(pass_stateMachineInitSubstateNest_seq)OTE(pass_all);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="50" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="50">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[30]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[31]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[32]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[33]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[34]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[35]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[36]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[37]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[38]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[39]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[40]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[41]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[42]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[43]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[44]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[45]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[46]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[47]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[48]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[49]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="29" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[24],2,tc);]]>
</Text>
</Rung>
<Rung Number="30" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[25],2,tc);]]>
</Text>
</Rung>
<Rung Number="31" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[26],2,tc);]]>
</Text>
</Rung>
<Rung Number="32" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[27],2,tc);]]>
</Text>
</Rung>
<Rung Number="33" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[28],2,tc);]]>
</Text>
</Rung>
<Rung Number="34" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[29],2,tc);]]>
</Text>
</Rung>
<Rung Number="35" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[30],2,tc);]]>
</Text>
</Rung>
<Rung Number="36" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[31],2,tc);]]>
</Text>
</Rung>
<Rung Number="37" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[32],2,tc);]]>
</Text>
</Rung>
<Rung Number="38" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[33],2,tc);]]>
</Text>
</Rung>
<Rung Number="39" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[34],2,tc);]]>
</Text>
</Rung>
<Rung Number="40" Type="N">
<Comment>
<![CDATA[### Scan 3 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="41" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[35],3,tc);]]>
</Text>
</Rung>
<Rung Number="42" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[36],3,tc);]]>
</Text>
</Rung>
<Rung Number="43" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[37],3,tc);]]>
</Text>
</Rung>
<Rung Number="44" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[38],3,tc);]]>
</Text>
</Rung>
<Rung Number="45" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[39],3,tc);]]>
</Text>
</Rung>
<Rung Number="46" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[40],3,tc);]]>
</Text>
</Rung>
<Rung Number="47" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[41],3,tc);]]>
</Text>
</Rung>
<Rung Number="48" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[42],3,tc);]]>
</Text>
</Rung>
<Rung Number="49" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[43],3,tc);]]>
</Text>
</Rung>
<Rung Number="50" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[44],3,tc);]]>
</Text>
</Rung>
<Rung Number="51" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[45],3,tc);]]>
</Text>
</Rung>
<Rung Number="52" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[46],3,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstateNested_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitSubNest_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitSubNest_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_mid" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a top-level initial transition for the entire state machine that targets a deeply-nested sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitSubstateNest_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitSubNest_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_mid)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_mid)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[8],0,tc);]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[9],0,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[10],0,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[11],0,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_mid)unitTest_assertTrue(assertions[16],1,tc);]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_mid)unitTest_assertTrue(assertions[17],1,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_mid)unitTest_assertTrue(assertions[18],1,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_mid)unitTest_assertTrue(assertions[19],1,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],1,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],1,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],1,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="30" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="30">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[20]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[21]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[22]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[23]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[24]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[25]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[26]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[27]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[28]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[29]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIO(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
<Rung Number="20" Type="N">
<Comment>
<![CDATA[### Scan 2 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="21" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[16],2,tc);]]>
</Text>
</Rung>
<Rung Number="22" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[17],2,tc);]]>
</Text>
</Rung>
<Rung Number="23" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[18],2,tc);]]>
</Text>
</Rung>
<Rung Number="24" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[19],2,tc);]]>
</Text>
</Rung>
<Rung Number="25" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[20],2,tc);]]>
</Text>
</Rung>
<Rung Number="26" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[21],2,tc);]]>
</Text>
</Rung>
<Rung Number="27" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[22],2,tc);]]>
</Text>
</Rung>
<Rung Number="28" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[23],2,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSubstate_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Description>
<![CDATA[Top-level initial transition for the entire state machine that targets a sub-state.]]>
</Description>
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="20" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="20">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[10]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[11]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[12]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[13]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[14]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[15]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[16]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[17]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[18]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[19]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialSubstate_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialSubstate_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_superstate" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a sub-state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialSubstate_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialSubstate_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_superstate)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_superstate)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[4],0,tc);]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],0,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[6],0,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],0,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="12" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_superstate)unitTest_assertTrue(assertions[8],1,tc);]]>
</Text>
</Rung>
<Rung Number="13" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_superstate)unitTest_assertTrue(assertions[9],1,tc);]]>
</Text>
</Rung>
<Rung Number="14" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_superstate)unitTest_assertTrue(assertions[10],1,tc);]]>
</Text>
</Rung>
<Rung Number="15" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_superstate)unitTest_assertTrue(assertions[11],1,tc);]]>
</Text>
</Rung>
<Rung Number="16" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[12],1,tc);]]>
</Text>
</Rung>
<Rung Number="17" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[13],1,tc);]]>
</Text>
</Rung>
<Rung Number="18" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[14],1,tc);]]>
</Text>
</Rung>
<Rung Number="19" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[15],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialSuperstateInitial" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Top-level initial transition for the entire state machine that targets a super-state that has its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="stateMachineInitialSuperstateInitialNest" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Top-level initial transition for the entire state machine targeting a super-state that has its own initial transition to a deeply-nested sub-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="stateMachineInitialTop_dual" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_2" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_2">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in dual-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_dual);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_2(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialTop_seq" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_s" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_s">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in sequential-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_seq);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_s(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="stateMachineInitialTop_single" TestEdits="false" MainRoutineName="main" Disabled="false">
<Tags>
<Tag Name="assertions" TagType="Base" DataType="unitTest_assertTrue" Dimensions="10" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Array DataType="unitTest_assertTrue" Dimensions="10">
<Element Index="[0]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[1]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[2]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[3]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[4]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[5]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[6]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[7]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[8]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
<Element Index="[9]">
<Structure DataType="unitTest_assertTrue">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
</Structure>
</Element>
</Array>
</Data>
</Tag>
<Tag Name="sm" TagType="Base" DataType="stateMachine_smInitialTop_1" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="stateMachine_smInitialTop_1">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_overflow" DataType="BOOL" Value="0"/>
<DataValueMember Name="eventQ_watermark" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="stateEntry_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateExit_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateDo_target" DataType="BOOL" Value="0"/>
<DataValueMember Name="stateActive_target" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
<Tag Name="tc" TagType="Base" DataType="unitTest_case" Constant="false" ExternalAccess="None">
<Data>01 00 00 00 00 00 00 00 00 00 00 00</Data>
<Data Format="Decorated">
<Structure DataType="unitTest_case">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="pass" DataType="BOOL" Value="0"/>
<DataValueMember Name="fail" DataType="BOOL" Value="0"/>
<DataValueMember Name="scan" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="assert_fail" DataType="BOOL" Value="0"/>
</Structure>
</Data>
</Tag>
</Tags>
<Routines>
<Routine Name="main" Type="RLL">
<RLLContent>
<Rung Number="0" Type="N">
<Comment>
<![CDATA[Validate a transition from a top-level initial transition to a top-level simple state in single-scan transition mode.
]]>
</Comment>
<Text>
<![CDATA[unitTest_case(tc,pass_stateMachineInitialTop_single);]]>
</Text>
</Rung>
<Rung Number="1" Type="N">
<Text>
<![CDATA[stateMachine_smInitialTop_1(sm);]]>
</Text>
</Rung>
<Rung Number="2" Type="N">
<Comment>
<![CDATA[### Scan 0 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="3" Type="N">
<Text>
<![CDATA[XIC(sm.stateEntry_target)unitTest_assertTrue(assertions[0],0,tc);]]>
</Text>
</Rung>
<Rung Number="4" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[1],0,tc);]]>
</Text>
</Rung>
<Rung Number="5" Type="N">
<Text>
<![CDATA[XIO(sm.stateDo_target)unitTest_assertTrue(assertions[2],0,tc);]]>
</Text>
</Rung>
<Rung Number="6" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[3],0,tc);]]>
</Text>
</Rung>
<Rung Number="7" Type="N">
<Comment>
<![CDATA[### Scan 1 ###
]]>
</Comment>
<Text>
<![CDATA[NOP();]]>
</Text>
</Rung>
<Rung Number="8" Type="N">
<Text>
<![CDATA[XIO(sm.stateEntry_target)unitTest_assertTrue(assertions[4],1,tc);]]>
</Text>
</Rung>
<Rung Number="9" Type="N">
<Text>
<![CDATA[XIO(sm.stateExit_target)unitTest_assertTrue(assertions[5],1,tc);]]>
</Text>
</Rung>
<Rung Number="10" Type="N">
<Text>
<![CDATA[XIC(sm.stateDo_target)unitTest_assertTrue(assertions[6],1,tc);]]>
</Text>
</Rung>
<Rung Number="11" Type="N">
<Text>
<![CDATA[XIC(sm.stateActive_target)unitTest_assertTrue(assertions[7],1,tc);]]>
</Text>
</Rung>
</RLLContent>
</Routine>
</Routines>
</Program>
<Program Name="transitionFromSubstateInitial" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a sub-state to its enclosing super-state where the super-state has its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionFromSubstateInitialNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a deeply-nested sub-state to the top-level super-state where the super-state has its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSubstateSibling" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition to a state within the same super-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateEntry" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition targeting a sub-state within a super-state that does not contain the source state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateEntryNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition to a deeply-nested sub-state within a top-level super-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateExit" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition leaving the super-state containing the source sub-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateExitNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition leaving a super-state from a deeply-nested sub-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateInitial" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition to a super-state with its own initial transition.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionSuperstateInitialNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition to a super-state with its own initial transition targeting a deeply-nested sub-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionTopSibling" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition between two, top-level states.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionToSubstate" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a super-state to one of its sub-states.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionToSubstateNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a super-state to a deeply-nested sub-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionToSuperstate" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a sub-state to its enclosing super-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
<Program Name="transitionToSuperstateNested" TestEdits="false" Disabled="false">
<Description>
<![CDATA[Transition from a deeply-nested sub-state to its top-level enclosing super-state.]]>
</Description>
<Tags/>
<Routines/>
</Program>
</Programs>
<Tasks>
<Task Name="MainTask" Type="CONTINUOUS" Priority="10" Watchdog="500" DisableUpdateOutputs="false" InhibitTask="false">
<ScheduledPrograms>
<ScheduledProgram Name="results"/>
<ScheduledProgram Name="stateMachineInitialTop_single"/>
<ScheduledProgram Name="stateMachineInitialTop_dual"/>
<ScheduledProgram Name="stateMachineInitialTop_seq"/>
<ScheduledProgram Name="stateMachineInitialSubstate_single"/>
<ScheduledProgram Name="stateMachineInitialSubstate_dual"/>
<ScheduledProgram Name="stateMachineInitialSubstate_seq"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_single"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_dual"/>
<ScheduledProgram Name="stateMachineInitialSubstateNested_seq"/>
<ScheduledProgram Name="stateMachineInitialSuperstateInitial"/>
<ScheduledProgram Name="stateMachineInitialSuperstateInitialNest"/>
<ScheduledProgram Name="transitionTopSibling"/>
<ScheduledProgram Name="transitionSubstateSibling"/>
<ScheduledProgram Name="transitionToSuperstate"/>
<ScheduledProgram Name="transitionToSuperstateNested"/>
<ScheduledProgram Name="transitionToSubstate"/>
<ScheduledProgram Name="transitionToSubstateNested"/>
<ScheduledProgram Name="transitionSuperstateExit"/>
<ScheduledProgram Name="transitionSuperstateExitNested"/>
<ScheduledProgram Name="transitionSuperstateEntry"/>
<ScheduledProgram Name="transitionSuperstateEntryNested"/>
<ScheduledProgram Name="transitionSuperstateInitial"/>
<ScheduledProgram Name="transitionSuperstateInitialNested"/>
<ScheduledProgram Name="transitionFromSubstateInitial"/>
<ScheduledProgram Name="transitionFromSubstateInitialNested"/>
</ScheduledPrograms>
</Task>
</Tasks>
<CommPorts>
<SerialPort Channel="0" BaudRate="19200" Parity="No Parity" DataBits="8 Bits of Data" StopBits="1 Stop Bit" ComDriverId="DF1" RTSOffDelay="0" RTSSendDelay="0" ControlLine="No Handshake" RemoteModeChangeFlag="false" ModeChangeAttentionChar="27"
 SystemModeCharacter="83" UserModeCharacter="85" DCDWaitDelay="0">
<ASCII XONXOFFEnable="false" DeleteMode="0" EchoMode="0" TerminationChars="65293" AppendChars="2573" BufferSize="82"/>
<DF1 DuplicateDetection="true" ErrorDetection="BCC Error" EmbeddedResponseEnable="Autodetect" DF1Mode="Pt to Pt" ACKTimeout="50" NAKReceiveLimit="3" ENQTransmitLimit="3" TransmitRetries="3" StationAddress="0" ReplyMessageWait="5" PollingMode="Message Based (slave can initiate messages)"
 MasterMessageTransmit="Between station polls" NormalPollNodeFile="&lt;NA&gt;" NormalPollGroupSize="0" PriorityPollNodeFile="&lt;NA&gt;" ActiveStationFile="&lt;NA&gt;" SlavePollTimeout="3000" EOTSuppression="0" MaxStationAddress="31" TokenHoldFactor="1" EnableStoreFwd="false" StoreFwdFile="&lt;NA&gt;"
/>
</SerialPort>
</CommPorts>
<CST MasterID="0"/>
<WallClockTime LocalTimeAdjustment="0" TimeZone="0"/>
<Trends/>
<TimeSynchronize Priority1="128" Priority2="128" PTPEnable="false"/>
</Controller>
</RSLogix5000Content>
